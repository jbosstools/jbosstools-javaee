<?xml version="1.0" encoding="UTF-8"?>
<facelet-taglib xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.0" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd" id="rich">
    <namespace>http://richfaces.org/rich</namespace>
    <tag>
        <tag-name>accordion</tag-name>
        <component>
            <description>@author akolonitsky @since 2010-08-05</description>
            <component-type>org.richfaces.Accordion</component-type>
            <renderer-type>org.richfaces.AccordionRenderer</renderer-type>
            <handler-class>org.richfaces.view.facelets.html.TogglePanelTagHandler</handler-class>
        </component>
        <attribute>
            <name>activeItem</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>Converter instance registered with this component.</description>
            <display-name>Converter</display-name>
            <icon />
            <name>converter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <name>cycledSwitching</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>height</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>itemActiveHeaderClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemActiveLeftIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemActiveRightIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemChangeListener</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <name>itemContentClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemDisabledHeaderClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemDisabledLeftIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemDisabledRightIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemHeaderClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemInactiveHeaderClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemInactiveLeftIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemInactiveRightIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforeitemchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>switchType</name>
            <type>org.richfaces.component.SwitchType</type>
        </attribute>
        <attribute>
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>width</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>accordionItem</tag-name>
        <component>
            <description>@author akolonitsky @since 2010-08-13</description>
            <component-type>org.richfaces.AccordionItem</component-type>
            <renderer-type>org.richfaces.AccordionItemRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>contentClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Converter instance registered with this component.</description>
            <display-name>Converter</display-name>
            <icon />
            <name>converter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>header</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>headerActiveClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>headerClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>headerDisabledClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>headerInactiveClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>headerStyle</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>leftActiveIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>leftDisabledIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>leftInactiveIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>name</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onenter</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onheaderclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onheaderdblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onheadermousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onheadermousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onheadermouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onleave</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>rightActiveIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rightDisabledIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rightInactiveIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>switchType</name>
            <type>org.richfaces.component.SwitchType</type>
        </attribute>
        <attribute>
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The current value of this component.</description>
            <display-name>Value</display-name>
            <icon />
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>autocomplete</tag-name>
        <component>
            <description>@author Nick Belaevski</description>
            <component-type>org.richfaces.Autocomplete</component-type>
            <renderer-type>org.richfaces.AutocompleteRenderer</renderer-type>
            <handler-class>org.richfaces.view.facelets.AutocompleteHandler</handler-class>
        </component>
        <attribute>
            <name>autocompleteList</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>autocompleteMethod</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <name>autofill</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>clientFilterFunction</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Converter instance registered with this component.</description>
            <display-name>Converter</display-name>
            <icon />
            <name>converter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the converter message, replacing any message that comes from the converter.</description>
            <display-name>Converter Message</display-name>
            <icon />
            <name>converterMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>fetchValue</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>filterFunction</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.</description>
            <display-name>Immediate Action</display-name>
            <icon />
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>inputClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>layout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>minChars</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>mode</name>
            <type>org.richfaces.component.AutocompleteMode</type>
        </attribute>
        <attribute>
            <name>onbeforedomupdate</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbegin</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onblur</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onerror</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onfocus</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistdblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onselectitem</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>popupClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating that the user is required to provide a submitted value for this input component.</description>
            <display-name>Required Flag</display-name>
            <icon />
            <name>required</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the validation message for the "required" facility, if the "required" facility is used.</description>
            <display-name>Required Message</display-name>
            <icon />
            <name>requiredMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>selectFirst</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>selectedItemClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>showButton</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>tokens</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>MethodExpression representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.</description>
            <display-name>Validator</display-name>
            <icon />
            <name>validator</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the validator message, replacing any message that comes from the validator.</description>
            <display-name>Validator Message</display-name>
            <icon />
            <name>validatorMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The current value of this component.</description>
            <display-name>Value</display-name>
            <icon />
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a &lt;code&gt;ValueChangeEvent&lt;/code&gt; parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing what the new value is, but this can be useful in cases where a notification is needed that "this value changed".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Value Change Listener</display-name>
            <icon />
            <name>valueChangeListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <name>var</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>calendar</tag-name>
        <component>
            <description>@author amarkhel</description>
            <component-type>org.richfaces.Calendar</component-type>
            <renderer-type>org.richfaces.CalendarRenderer</renderer-type>
            <handler-class>org.richfaces.view.facelets.CalendarHandler</handler-class>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>boundaryDatesMode</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>buttonClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>buttonDisabledIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>buttonIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>buttonLabel</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Converter instance registered with this component.</description>
            <display-name>Converter</display-name>
            <icon />
            <name>converter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the converter message, replacing any message that comes from the converter.</description>
            <display-name>Converter Message</display-name>
            <icon />
            <name>converterMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>currentDate</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>dataModel</name>
            <type>org.richfaces.model.CalendarDataModel</type>
        </attribute>
        <attribute>
            <name>datePattern</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>dayClassFunction</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>dayDisableFunction</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>defaultLabel</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>defaultTime</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>direction</name>
            <type>org.richfaces.component.Positioning</type>
        </attribute>
        <attribute>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>enableManualInput</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>firstWeekDay</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>horizontalOffset</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.</description>
            <display-name>Immediate Action</display-name>
            <icon />
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>inputClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>inputSize</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>inputStyle</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>jointPoint</name>
            <type>org.richfaces.component.Positioning</type>
        </attribute>
        <attribute>
            <name>locale</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>minDaysInFirstWeek</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>mode</name>
            <type>org.richfaces.component.AbstractCalendar.Mode</type>
        </attribute>
        <attribute>
            <name>monthLabels</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>monthLabelsShort</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>onbeforecurrentdateselect</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforedateselect</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforetimeselect</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onclean</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oncurrentdateselect</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondatemouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondatemouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondateselect</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onhide</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputblur</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputdblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputfocus</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputselect</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onshow</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ontimeselect</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>popup</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>popupClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>popupStyle</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>preloadDateRangeBegin</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>preloadDateRangeEnd</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating that the user is required to provide a submitted value for this input component.</description>
            <display-name>Required Flag</display-name>
            <icon />
            <name>required</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the validation message for the "required" facility, if the "required" facility is used.</description>
            <display-name>Required Message</display-name>
            <icon />
            <name>requiredMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>resetTimeOnDateSelect</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>showApplyButton</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>showFooter</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>showHeader</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>showInput</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>showWeekDaysBar</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>showWeeksBar</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>tabindex</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>timeZone</name>
            <type>java.util.TimeZone</type>
        </attribute>
        <attribute>
            <name>todayControlMode</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>MethodExpression representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.</description>
            <display-name>Validator</display-name>
            <icon />
            <name>validator</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the validator message, replacing any message that comes from the validator.</description>
            <display-name>Validator Message</display-name>
            <icon />
            <name>validatorMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The current value of this component.</description>
            <display-name>Value</display-name>
            <icon />
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a &lt;code&gt;ValueChangeEvent&lt;/code&gt; parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing what the new value is, but this can be useful in cases where a notification is needed that "this value changed".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Value Change Listener</display-name>
            <icon />
            <name>valueChangeListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <name>verticalOffset</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>weekDayLabels</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>weekDayLabelsShort</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>zindex</name>
            <type>int</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>collapsiblePanel</tag-name>
        <component>
            <description>@author akolonitsky @since 2010-08-27</description>
            <component-type>org.richfaces.CollapsiblePanel</component-type>
            <renderer-type>org.richfaces.CollapsiblePanelRenderer</renderer-type>
            <handler-class>org.richfaces.view.facelets.html.CollapsiblePanelTagHandler</handler-class>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>bodyClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Converter instance registered with this component.</description>
            <display-name>Converter</display-name>
            <icon />
            <name>converter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>expanded</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>header</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>headerClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>leftCollapsedIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>leftExpandedIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforeswitch</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onswitch</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>rightCollapsedIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rightExpandedIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>switchType</name>
            <type>org.richfaces.component.SwitchType</type>
        </attribute>
        <attribute>
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>toggleListener</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>The current value of this component.</description>
            <display-name>Value</display-name>
            <icon />
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>collapsibleSubTable</tag-name>
        <component>
            <description>@author Anton Belevich</description>
            <component-type>org.richfaces.CollapsibleSubTable</component-type>
            <renderer-type>org.richfaces.CollapsibleSubTableRenderer</renderer-type>
            <handler-class>org.richfaces.taglib.CollapsibleSubTableHandler</handler-class>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>columnClasses</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>expandMode</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>expanded</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>filterVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>first</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>footerClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>headerClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>iterationStatusVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>keepSaved</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>noDataLabel</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowdblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>rowClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rowClasses</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rowKeyConverter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <name>rowKeyVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rows</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>sortMode</name>
            <type>org.richfaces.model.SortMode</type>
        </attribute>
        <attribute>
            <name>sortPriority</name>
            <type>java.util.Collection</type>
        </attribute>
        <attribute>
            <name>stateVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>var</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>collapsibleSubTableToggler</tag-name>
        <component>
            <description>@author Anton Belevich</description>
            <component-type>org.richfaces.CollapsibleSubTableToggler</component-type>
            <renderer-type>org.richfaces.CollapsibleSubTableTogglerRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>collapsedIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>collapsedLabel</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>event</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>expandedIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>expandedLabel</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>for</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>column</tag-name>
        <component>
            <description>@author Anton Belevich</description>
            <component-type>org.richfaces.Column</component-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>breakRowBefore</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>colspan</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>comparator</name>
            <type>java.util.Comparator</type>
        </attribute>
        <attribute>
            <name>filter</name>
            <type>org.richfaces.model.Filter</type>
        </attribute>
        <attribute>
            <name>filterExpression</name>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <name>filterValue</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>footerClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>headerClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>rowspan</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>sortBy</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>sortOrder</name>
            <type>org.richfaces.component.SortOrder</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>width</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>columnGroup</tag-name>
        <component>
            <component-type>org.richfaces.ColumnGroup</component-type>
            <renderer-type>org.richfaces.ColumnGroupRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>componentControl</tag-name>
        <behavior>
            <description>@author Anton Belevich</description>
            <behavior-id>org.richfaces.behavior.ComponentControlBehavior</behavior-id>
            <handler-class>org.richfaces.taglib.ComponentControlHandler</handler-class>
        </behavior>
        <attribute>
            <name>event</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforeoperation</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>operation</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>selector</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>target</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>dataGrid</tag-name>
        <component>
            <description>@author Anton Belevich</description>
            <component-type>org.richfaces.DataGrid</component-type>
            <renderer-type>org.richfaces.DataGridRenderer</renderer-type>
            <handler-class>org.richfaces.taglib.DataGridHandler</handler-class>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>columns</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>elements</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>first</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>iterationStatusVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>keepSaved</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>rowKeyConverter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <name>rowKeyVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>stateVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <icon />
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <icon />
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <icon />
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>var</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>dataScroller</tag-name>
        <component>
            <component-type>org.richfaces.DataScroller</component-type>
            <renderer-type>org.richfaces.DataScrollerRenderer</renderer-type>
            <handler-class>org.richfaces.taglib.DataScrollerHandler</handler-class>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>boundaryControls</name>
            <type>org.richfaces.component.DataScrollerControlsMode</type>
        </attribute>
        <attribute>
            <name>fastControls</name>
            <type>org.richfaces.component.DataScrollerControlsMode</type>
        </attribute>
        <attribute>
            <name>fastStep</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>for</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>lastPageMode</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>maxPages</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>page</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>render</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>renderIfSinglePage</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>stepControls</name>
            <type>org.richfaces.component.DataScrollerControlsMode</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>dataTable</tag-name>
        <component>
            <description>@author Anton Belevich</description>
            <component-type>org.richfaces.DataTable</component-type>
            <renderer-type>org.richfaces.DataTableRenderer</renderer-type>
            <handler-class>org.richfaces.taglib.DataTableHandler</handler-class>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>captionClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>columnClasses</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>filterVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>first</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>footerClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>headerClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>iterationStatusVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>keepSaved</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>noDataLabel</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowdblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>rowClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rowClasses</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rowKeyConverter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <name>rowKeyVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rows</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>sortMode</name>
            <type>org.richfaces.model.SortMode</type>
        </attribute>
        <attribute>
            <name>sortPriority</name>
            <type>java.util.Collection</type>
        </attribute>
        <attribute>
            <name>stateVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>var</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>dragIndicator</tag-name>
        <component>
            <description>@author abelevich</description>
            <component-type>org.richfaces.DragIndicator</component-type>
            <renderer-type>org.richfaces.DragIndicatorRenderer</renderer-type>
        </component>
        <attribute>
            <name>acceptClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>draggingClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rejectClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>dragSource</tag-name>
        <component>
            <description>@author abelevich</description>
            <component-type>org.richfaces.DragSource</component-type>
            <renderer-type>org.richfaces.DragSourceRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>dragIndicator</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>dragValue</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>type</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>dropDownMenu</tag-name>
        <component>
            <component-type>org.richfaces.DropDownMenu</component-type>
            <renderer-type>org.richfaces.DropDownMenuRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <icon />
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>direction</name>
            <type>org.richfaces.component.Positioning</type>
        </attribute>
        <attribute>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>hideDelay</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>horizontalOffset</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>jointPoint</name>
            <type>org.richfaces.component.Positioning</type>
        </attribute>
        <attribute>
            <name>label</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <icon />
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>mode</name>
            <type>org.richfaces.component.Mode</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <icon />
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <icon />
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ongrouphide</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ongroupshow</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onhide</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <icon />
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <icon />
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <icon />
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <icon />
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <icon />
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <icon />
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <icon />
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <icon />
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onshow</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>popupWidth</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>showDelay</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>showEvent</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <icon />
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <icon />
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <icon />
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>verticalOffset</name>
            <type>int</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>dropTarget</tag-name>
        <component>
            <description>@author abelevich</description>
            <component-type>org.richfaces.DropTarget</component-type>
            <renderer-type>org.richfaces.DropTargetRenderer</renderer-type>
            <handler-class>org.richfaces.view.facelets.DropHandler</handler-class>
        </component>
        <attribute>
            <name>acceptedTypes</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>bypassUpdates</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>dropListener</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <name>dropValue</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>execute</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>limitRender</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>onbeforedomupdate</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbegin</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>render</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>extendedDataTable</tag-name>
        <component>
            <description>@author Konstantin Mishin</description>
            <component-type>org.richfaces.ExtendedDataTable</component-type>
            <renderer-type>org.richfaces.ExtendedDataTableRenderer</renderer-type>
            <handler-class>org.richfaces.taglib.ExtendedDataTableHandler</handler-class>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>columnClasses</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>filterVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>first</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>footerClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>frozenColumns</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>headerClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>iterationStatusVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>keepSaved</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>noDataLabel</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforeselectionchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowdblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onselectionchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>rowClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rowClasses</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rowKeyConverter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <name>rowKeyVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rows</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>selection</name>
            <type>java.util.Collection</type>
        </attribute>
        <attribute>
            <name>selectionMode</name>
            <type>org.richfaces.model.SelectionMode</type>
        </attribute>
        <attribute>
            <name>sortMode</name>
            <type>org.richfaces.model.SortMode</type>
        </attribute>
        <attribute>
            <name>sortPriority</name>
            <type>java.util.Collection</type>
        </attribute>
        <attribute>
            <name>stateVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>var</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>fileUpload</tag-name>
        <component>
            <description>@author Konstantin Mishin</description>
            <component-type>org.richfaces.FileUpload</component-type>
            <renderer-type>org.richfaces.FileUploadRenderer</renderer-type>
            <handler-class>org.richfaces.view.facelets.FileUploadHandler</handler-class>
        </component>
        <attribute>
            <name>acceptedTypes</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>addLabel</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>clearAllLabel</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>clearLabel</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>deleteLabel</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <icon />
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>doneLabel</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>execute</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>fileUploadListener</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <icon />
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>limitRender</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>noDuplicate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>onbeforedomupdate</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbegin</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <icon />
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <icon />
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onfilesubmit</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <icon />
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <icon />
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <icon />
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <icon />
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <icon />
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <icon />
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <icon />
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <icon />
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onuploadcomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>render</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>serverErrorLabel</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>sizeExceededLabel</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <icon />
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <icon />
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <icon />
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>uploadLabel</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>graphValidator</tag-name>
        <component>
            <description>JSF component class</description>
            <component-type>org.richfaces.GraphValidator</component-type>
            <handler-class>org.richfaces.view.facelets.html.GraphValidatorHandler</handler-class>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>Get set of profiles for validation @return</description>
            <name>groups</name>
            <type>java.lang.Class[]</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Get object for validation @return</description>
            <name>summary</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Get graph validator Id. @return</description>
            <name>type</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Get object for validation @return</description>
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>hashParam</tag-name>
        <component>
            <description>@author Anton Belevich</description>
            <component-type>org.richfaces.HashParameter</component-type>
            <handler-class>javax.faces.view.facelets.ComponentHandler</handler-class>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>name</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>value</name>
            <type>java.util.Map</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>inplaceInput</tag-name>
        <component>
            <description>@author Anton Belevich</description>
            <component-type>org.richfaces.InplaceInput</component-type>
            <renderer-type>org.richfaces.InplaceInputRenderer</renderer-type>
        </component>
        <attribute>
            <name>activeClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>changedClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Converter instance registered with this component.</description>
            <display-name>Converter</display-name>
            <icon />
            <name>converter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the converter message, replacing any message that comes from the converter.</description>
            <display-name>Converter Message</display-name>
            <icon />
            <name>converterMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>defaultLabel</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>disabledClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>editEvent</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.</description>
            <display-name>Immediate Action</display-name>
            <icon />
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>inputWidth</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onblur</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onfocus</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputdblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputselect</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating that the user is required to provide a submitted value for this input component.</description>
            <display-name>Required Flag</display-name>
            <icon />
            <name>required</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the validation message for the "required" facility, if the "required" facility is used.</description>
            <display-name>Required Message</display-name>
            <icon />
            <name>requiredMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>saveOnBlur</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>showControls</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <icon />
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <icon />
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>tabindex</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <icon />
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>MethodExpression representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.</description>
            <display-name>Validator</display-name>
            <icon />
            <name>validator</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the validator message, replacing any message that comes from the validator.</description>
            <display-name>Validator Message</display-name>
            <icon />
            <name>validatorMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The current value of this component.</description>
            <display-name>Value</display-name>
            <icon />
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a &lt;code&gt;ValueChangeEvent&lt;/code&gt; parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing what the new value is, but this can be useful in cases where a notification is needed that "this value changed".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Value Change Listener</display-name>
            <icon />
            <name>valueChangeListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>inplaceSelect</tag-name>
        <component>
            <description>@author Anton Belevich</description>
            <component-type>org.richfaces.InplaceSelect</component-type>
            <renderer-type>org.richfaces.InplaceSelectRenderer</renderer-type>
        </component>
        <attribute>
            <name>activeClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>changedClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Converter instance registered with this component.</description>
            <display-name>Converter</display-name>
            <icon />
            <name>converter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the converter message, replacing any message that comes from the converter.</description>
            <display-name>Converter Message</display-name>
            <icon />
            <name>converterMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>defaultLabel</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>disabledClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>editEvent</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.</description>
            <display-name>Immediate Action</display-name>
            <icon />
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>inputWidth</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>listClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>listHeight</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>listWidth</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onblur</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onfocus</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputdblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputselect</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistdblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onselectitem</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>openOnEdit</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating that the user is required to provide a submitted value for this input component.</description>
            <display-name>Required Flag</display-name>
            <icon />
            <name>required</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the validation message for the "required" facility, if the "required" facility is used.</description>
            <display-name>Required Message</display-name>
            <icon />
            <name>requiredMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>saveOnBlur</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>saveOnSelect</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>selectItemClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>showControls</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <icon />
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <icon />
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>tabindex</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <icon />
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>MethodExpression representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.</description>
            <display-name>Validator</display-name>
            <icon />
            <name>validator</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the validator message, replacing any message that comes from the validator.</description>
            <display-name>Validator Message</display-name>
            <icon />
            <name>validatorMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The current value of this component.</description>
            <display-name>Value</display-name>
            <icon />
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a &lt;code&gt;ValueChangeEvent&lt;/code&gt; parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing what the new value is, but this can be useful in cases where a notification is needed that "this value changed".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Value Change Listener</display-name>
            <icon />
            <name>valueChangeListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>inputNumberSlider</tag-name>
        <component>
            <component-type>org.richfaces.InputNumberSlider</component-type>
            <renderer-type>org.richfaces.InputNumberSliderRenderer</renderer-type>
        </component>
        <attribute>
            <description>Access key that, when pressed, transfers focus to this element.</description>
            <display-name>Access Key</display-name>
            <icon />
            <name>accesskey</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Converter instance registered with this component.</description>
            <display-name>Converter</display-name>
            <icon />
            <name>converter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the converter message, replacing any message that comes from the converter.</description>
            <display-name>Converter Message</display-name>
            <icon />
            <name>converterMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>decreaseClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>decreaseSelectedClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>delay</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <icon />
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. A value of false causes no attribute to be rendered, while a value of true causes the attribute to be rendered as disabled="disabled".</description>
            <display-name>Disabled Flag</display-name>
            <icon />
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>enableManualInput</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>handleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>handleSelectedClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for the associated component</description>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.</description>
            <display-name>Immediate Action</display-name>
            <icon />
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>increaseClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>increaseSelectedClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>inputClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>inputPosition</name>
            <type>org.richfaces.component.InputNumberSliderInputPosition</type>
        </attribute>
        <attribute>
            <name>inputSize</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description>A localized user presentable name for this component.</description>
            <display-name>Label</display-name>
            <icon />
            <name>label</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <icon />
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>maxValue</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>maxlength</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>minValue</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when this element loses focus.</description>
            <display-name>Focus Off Script</display-name>
            <icon />
            <name>onblur</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when this element loses focus and its value has been modified since gaining focus.</description>
            <display-name>Input Change Script</display-name>
            <icon />
            <name>onchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <icon />
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <icon />
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when this element receives focus.</description>
            <display-name>Focus On Script</display-name>
            <icon />
            <name>onfocus</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <icon />
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <icon />
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <icon />
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <icon />
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <icon />
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <icon />
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <icon />
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <icon />
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when text within this element is selected by the user.</description>
            <display-name>Text Select Script</display-name>
            <icon />
            <name>onselect</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>An override for the rendered attribute associated with our component</description>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating that the user is required to provide a submitted value for this input component.</description>
            <display-name>Required Flag</display-name>
            <icon />
            <name>required</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the validation message for the "required" facility, if the "required" facility is used.</description>
            <display-name>Required Message</display-name>
            <icon />
            <name>requiredMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>showArrows</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>showBoundaryValues</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>showInput</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>showTooltip</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>step</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <icon />
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <icon />
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Position of this element in the tabbing order for the current document. This value must be an integer between 0 and 32767.</description>
            <display-name>Tab Index</display-name>
            <icon />
            <name>tabindex</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <icon />
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>tooltipClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>trackClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>MethodExpression representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.</description>
            <display-name>Validator</display-name>
            <icon />
            <name>validator</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the validator message, replacing any message that comes from the validator.</description>
            <display-name>Validator Message</display-name>
            <icon />
            <name>validatorMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The current value of this component.</description>
            <display-name>Value</display-name>
            <icon />
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a &lt;code&gt;ValueChangeEvent&lt;/code&gt; parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing what the new value is, but this can be useful in cases where a notification is needed that "this value changed".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Value Change Listener</display-name>
            <icon />
            <name>valueChangeListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>inputNumberSpinner</tag-name>
        <component>
            <component-type>org.richfaces.InputNumberSpinner</component-type>
            <renderer-type>org.richfaces.InputNumberSpinnerRenderer</renderer-type>
        </component>
        <attribute>
            <description>Access key that, when pressed, transfers focus to this element.</description>
            <display-name>Access Key</display-name>
            <icon />
            <name>accesskey</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Converter instance registered with this component.</description>
            <display-name>Converter</display-name>
            <icon />
            <name>converter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the converter message, replacing any message that comes from the converter.</description>
            <display-name>Converter Message</display-name>
            <icon />
            <name>converterMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>cycled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <icon />
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. A value of false causes no attribute to be rendered, while a value of true causes the attribute to be rendered as disabled="disabled".</description>
            <display-name>Disabled Flag</display-name>
            <icon />
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>enableManualInput</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>The component identifier for the associated component</description>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.</description>
            <display-name>Immediate Action</display-name>
            <icon />
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>inputClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>inputSize</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description>A localized user presentable name for this component.</description>
            <display-name>Label</display-name>
            <icon />
            <name>label</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <icon />
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>maxValue</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>minValue</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when this element loses focus.</description>
            <display-name>Focus Off Script</display-name>
            <icon />
            <name>onblur</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when this element loses focus and its value has been modified since gaining focus.</description>
            <display-name>Input Change Script</display-name>
            <icon />
            <name>onchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <icon />
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <icon />
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondownclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when this element receives focus.</description>
            <display-name>Focus On Script</display-name>
            <icon />
            <name>onfocus</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputdblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oninputmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <icon />
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <icon />
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <icon />
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <icon />
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <icon />
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <icon />
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <icon />
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <icon />
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when text within this element is selected by the user.</description>
            <display-name>Text Select Script</display-name>
            <icon />
            <name>onselect</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onupclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>An override for the rendered attribute associated with our component</description>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating that the user is required to provide a submitted value for this input component.</description>
            <display-name>Required Flag</display-name>
            <icon />
            <name>required</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the validation message for the "required" facility, if the "required" facility is used.</description>
            <display-name>Required Message</display-name>
            <icon />
            <name>requiredMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>step</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <icon />
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <icon />
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Position of this element in the tabbing order for the current document. This value must be an integer between 0 and 32767.</description>
            <display-name>Tab Index</display-name>
            <icon />
            <name>tabindex</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <icon />
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>MethodExpression representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.</description>
            <display-name>Validator</display-name>
            <icon />
            <name>validator</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the validator message, replacing any message that comes from the validator.</description>
            <display-name>Validator Message</display-name>
            <icon />
            <name>validatorMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The current value of this component.</description>
            <display-name>Value</display-name>
            <icon />
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a &lt;code&gt;ValueChangeEvent&lt;/code&gt; parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing what the new value is, but this can be useful in cases where a notification is needed that "this value changed".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Value Change Listener</display-name>
            <icon />
            <name>valueChangeListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>itemChangeListener</tag-name>
        <handler-class>org.richfaces.view.facelets.html.ItemChangeListenerHandler</handler-class>
        <attribute>
            <name>for</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>binding</name>
            <type>javax.el.ValueExpression</type>
        </attribute>
        <attribute>
            <name>listener</name>
            <type>javax.el.ValueExpression</type>
        </attribute>
        <attribute>
            <name>type</name>
            <type>javax.el.ValueExpression</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>jQuery</tag-name>
        <component>
            <description>@author nick</description>
            <component-type>org.richfaces.JQuery</component-type>
            <renderer-type>org.richfaces.JQueryRenderer</renderer-type>
        </component>
        <attribute>
            <name>attachType</name>
            <type>org.richfaces.component.JQueryAttachType</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>event</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>name</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>query</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>selector</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>timing</name>
            <type>org.richfaces.component.JQueryTiming</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>list</tag-name>
        <component>
            <description>JSF component class</description>
            <component-type>org.richfaces.List</component-type>
            <renderer-type>org.richfaces.ListRenderer</renderer-type>
            <handler-class>org.richfaces.taglib.ListHandler</handler-class>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>first</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>iterationStatusVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>keepSaved</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowdblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrowmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>rowClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rowClasses</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rowKeyConverter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <name>rowKeyVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rows</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>stateVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>type</name>
            <type>org.richfaces.component.ListType</type>
        </attribute>
        <attribute>
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>var</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>menuGroup</tag-name>
        <component>
            <component-type>org.richfaces.MenuGroup</component-type>
            <renderer-type>org.richfaces.MenuGroupRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>Converter instance registered with this component.</description>
            <display-name>Converter</display-name>
            <icon />
            <name>converter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <icon />
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>direction</name>
            <type>org.richfaces.component.Positioning</type>
        </attribute>
        <attribute>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>horizontalOffset</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>icon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>iconDisabled</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>jointPoint</name>
            <type>org.richfaces.component.Positioning</type>
        </attribute>
        <attribute>
            <name>label</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <icon />
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <icon />
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <icon />
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onhide</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <icon />
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <icon />
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <icon />
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <icon />
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <icon />
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <icon />
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <icon />
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <icon />
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onshow</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <icon />
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <icon />
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <icon />
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>verticalOffset</name>
            <type>int</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>menuItem</tag-name>
        <component>
            <component-type>org.richfaces.MenuItem</component-type>
            <renderer-type>org.richfaces.MenuItemRenderer</renderer-type>
        </component>
        <attribute>
            <description>MethodExpression representing the application action to invoke when this component is activated by the user. The expression must evaluate to a public method that takes no parameters, and returns an Object (the toString() of which is called to derive the logical outcome) which is passed to the NavigationHandler for this application.</description>
            <display-name>Application Action</display-name>
            <icon />
            <name>action</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing an action listener method that will be notified when this component is activated by the user. The expression must evaluate to a public method that takes an ActionEvent parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing where the event came from, but this can be useful in cases where a notification is needed that "some action happened".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Action Listener</display-name>
            <icon />
            <name>actionListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>bypassUpdates</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <icon />
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>execute</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>icon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>iconDisabled</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase.</description>
            <display-name>Immediate Action</display-name>
            <icon />
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>label</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <icon />
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>limitRender</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>mode</name>
            <type>org.richfaces.component.Mode</type>
        </attribute>
        <attribute>
            <name>onbeforedomupdate</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbegin</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <icon />
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <icon />
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <icon />
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <icon />
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <icon />
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <icon />
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <icon />
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <icon />
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <icon />
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <icon />
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>render</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <icon />
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <icon />
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <icon />
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>menuSeparator</tag-name>
        <component>
            <component-type>org.richfaces.MenuSeparator</component-type>
            <renderer-type>org.richfaces.MenuSeparatorRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>message</tag-name>
        <component>
            <component-type>org.richfaces.HtmlMessage</component-type>
            <renderer-type>org.richfaces.MessageRenderer</renderer-type>
        </component>
        <attribute>
            <name>ajaxRendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>A mutable Map of the attributes associated with this component, keyed by attribute name.</description>
            <display-name>Attributes Map</display-name>
            <icon />
            <name>attributes</name>
            <type>java.util.Map</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>The number of child components associated with this component.</description>
            <display-name>Child Component Count</display-name>
            <icon />
            <name>childCount</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description>A mutable List of the child components associated with this component.</description>
            <display-name>Child Component List</display-name>
            <icon />
            <name>children</name>
            <type>java.util.List</type>
        </attribute>
        <attribute>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <icon />
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>A mutable Map of the facets associated with this component, keyed by facet name.</description>
            <display-name>Facets Map</display-name>
            <icon />
            <name>facets</name>
            <type>java.util.Map</type>
        </attribute>
        <attribute>
            <description>The component family to which this component belongs. This property is used to select an appropriate Renderer.</description>
            <display-name>Component Family</display-name>
            <icon />
            <name>family</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Client identifier of the component for which to display messages.</description>
            <display-name>Associated Client Id</display-name>
            <icon />
            <name>for</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>keepTransient</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <icon />
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <icon />
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <icon />
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <icon />
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <icon />
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <icon />
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <icon />
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <icon />
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <icon />
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <icon />
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <icon />
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.</description>
            <display-name>Parent Component</display-name>
            <icon />
            <name>parent</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.</description>
            <display-name>Renderer Type</display-name>
            <icon />
            <name>rendererType</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.</description>
            <display-name>Renders Children</display-name>
            <icon />
            <name>rendersChildren</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether the detail portion of displayed messages should be included. Default value is "true".</description>
            <display-name>Show Detail</display-name>
            <icon />
            <name>showDetail</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether the summary portion of displayed messages should be included. Default value is "false".</description>
            <display-name>Show Summary</display-name>
            <icon />
            <name>showSummary</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <icon />
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <icon />
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <icon />
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>messages</tag-name>
        <component>
            <component-type>org.richfaces.HtmlMessages</component-type>
            <renderer-type>org.richfaces.MessagesRenderer</renderer-type>
        </component>
        <attribute>
            <name>ajaxRendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>A mutable Map of the attributes associated with this component, keyed by attribute name.</description>
            <display-name>Attributes Map</display-name>
            <icon />
            <name>attributes</name>
            <type>java.util.Map</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>The number of child components associated with this component.</description>
            <display-name>Child Component Count</display-name>
            <icon />
            <name>childCount</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description>A mutable List of the child components associated with this component.</description>
            <display-name>Child Component List</display-name>
            <icon />
            <name>children</name>
            <type>java.util.List</type>
        </attribute>
        <attribute>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <icon />
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>A mutable Map of the facets associated with this component, keyed by facet name.</description>
            <display-name>Facets Map</display-name>
            <icon />
            <name>facets</name>
            <type>java.util.Map</type>
        </attribute>
        <attribute>
            <description>The component family to which this component belongs. This property is used to select an appropriate Renderer.</description>
            <display-name>Component Family</display-name>
            <icon />
            <name>family</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Client identifier of the component for which to display messages. This attribute is mutually exclusive with globalOnly and take precedence if used.</description>
            <display-name>Associated Client Id</display-name>
            <icon />
            <name>for</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that only global messages (that is, messages not associated with any client identifier) are to be displayed. Default value is "false".</description>
            <display-name>Global Only</display-name>
            <icon />
            <name>globalOnly</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>keepTransient</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <icon />
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <icon />
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <icon />
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <icon />
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <icon />
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <icon />
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <icon />
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <icon />
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <icon />
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <icon />
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <icon />
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The parent component for this component. On the root component in the component tree (which must be of type UIViewRoot), this property is null.</description>
            <display-name>Parent Component</display-name>
            <icon />
            <name>parent</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Identifier used (in conjunction with the "family" property) to select an appropriate Renderer to encode and decode this component.</description>
            <display-name>Renderer Type</display-name>
            <icon />
            <name>rendererType</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component takes responsibility for rendering its own children. This decision is normally delegated to the associated Renderer, if there is one.</description>
            <display-name>Renders Children</display-name>
            <icon />
            <name>rendersChildren</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether the detail portion of displayed messages should be included. Default value is "false".</description>
            <display-name>Show Detail</display-name>
            <icon />
            <name>showDetail</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether the summary portion of displayed messages should be included. Default value is "true".</description>
            <display-name>Show Summary</display-name>
            <icon />
            <name>showSummary</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <icon />
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <icon />
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <icon />
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>panel</tag-name>
        <component>
            <description>JSF component class</description>
            <component-type>org.richfaces.Panel</component-type>
            <renderer-type>org.richfaces.PanelRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>bodyClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>header</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>headerClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <icon />
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <icon />
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <icon />
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <icon />
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <icon />
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <icon />
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <icon />
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <icon />
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <icon />
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <icon />
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <icon />
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <icon />
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <icon />
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>panelMenu</tag-name>
        <component>
            <description>@author akolonitsky @since 2010-10-25</description>
            <component-type>org.richfaces.PanelMenu</component-type>
            <renderer-type>org.richfaces.PanelMenuRenderer</renderer-type>
            <handler-class>org.richfaces.view.facelets.html.PanelMenuTagHandler</handler-class>
        </component>
        <attribute>
            <name>activeItem</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>bubbleSelection</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>collapseEvent</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Converter instance registered with this component.</description>
            <display-name>Converter</display-name>
            <icon />
            <name>converter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>expandEvent</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>expandSingle</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>groupClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>groupCollapsedLeftIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>groupCollapsedRightIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>groupDisabledClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>groupDisabledLeftIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>groupDisabledRightIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>groupExpandedLeftIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>groupExpandedRightIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>groupMode</name>
            <type>org.richfaces.PanelMenuMode</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>itemChangeListener</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <name>itemClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemDisabledClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemDisabledLeftIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemDisabledRightIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemLeftIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemMode</name>
            <type>org.richfaces.PanelMenuMode</type>
        </attribute>
        <attribute>
            <name>itemRightIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>topGroupClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>topGroupCollapsedLeftIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>topGroupCollapsedRightIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>topGroupDisabledClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>topGroupDisabledLeftIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>topGroupDisabledRightIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>topGroupExpandedLeftIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>topGroupExpandedRightIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>topItemClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>topItemDisabledClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>topItemDisabledLeftIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>topItemDisabledRightIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>topItemLeftIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>topItemRightIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>width</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>panelMenuGroup</tag-name>
        <component>
            <description>@author akolonitsky @since 2010-10-25</description>
            <component-type>org.richfaces.PanelMenuGroup</component-type>
        </component>
        <attribute>
            <description>MethodExpression representing the application action to invoke when this component is activated by the user. The expression must evaluate to a public method that takes no parameters, and returns an Object (the toString() of which is called to derive the logical outcome) which is passed to the NavigationHandler for this application.</description>
            <display-name>Application Action</display-name>
            <icon />
            <name>action</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing an action listener method that will be notified when this component is activated by the user. The expression must evaluate to a public method that takes an ActionEvent parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing where the event came from, but this can be useful in cases where a notification is needed that "some action happened".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Action Listener</display-name>
            <icon />
            <name>actionListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>bypassUpdates</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>changeExpandListener</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <name>collapseEvent</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>disabledClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>execute</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>expandEvent</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>expanded</name>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <name>hoverClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase.</description>
            <display-name>Immediate Action</display-name>
            <icon />
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>label</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>leftCollapsedIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>leftDisabledIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>leftExpandedIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>leftIconClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>limitRender</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>mode</name>
            <type>org.richfaces.PanelMenuMode</type>
        </attribute>
        <attribute>
            <name>name</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforecollapse</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforedomupdate</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforeexpand</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforeselect</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforeswitch</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbegin</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oncollapse</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onexpand</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onselect</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onswitch</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onunselect</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>render</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>rightCollapsedIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rightDisabledIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rightExpandedIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rightIconClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>selectable</name>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>panelMenuItem</tag-name>
        <component>
            <description>@author akolonitsky @since 2010-10-25</description>
            <component-type>org.richfaces.PanelMenuItem</component-type>
        </component>
        <attribute>
            <description>MethodExpression representing the application action to invoke when this component is activated by the user. The expression must evaluate to a public method that takes no parameters, and returns an Object (the toString() of which is called to derive the logical outcome) which is passed to the NavigationHandler for this application.</description>
            <display-name>Application Action</display-name>
            <icon />
            <name>action</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing an action listener method that will be notified when this component is activated by the user. The expression must evaluate to a public method that takes an ActionEvent parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing where the event came from, but this can be useful in cases where a notification is needed that "some action happened".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Action Listener</display-name>
            <icon />
            <name>actionListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>bypassUpdates</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>disabledClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>execute</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase.</description>
            <display-name>Immediate Action</display-name>
            <icon />
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>label</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>leftDisabledIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>leftIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>leftIconClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>limitRender</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>mode</name>
            <type>org.richfaces.PanelMenuMode</type>
        </attribute>
        <attribute>
            <name>name</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforedomupdate</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforeselect</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbegin</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onselect</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onunselect</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>render</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>rightDisabledIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rightIcon</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rightIconClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>selectable</name>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>panelToggleListener</tag-name>
        <handler-class>org.richfaces.view.facelets.html.PanelToggleListenerHandler</handler-class>
        <attribute>
            <name>for</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>binding</name>
            <type>javax.el.ValueExpression</type>
        </attribute>
        <attribute>
            <name>listener</name>
            <type>javax.el.ValueExpression</type>
        </attribute>
        <attribute>
            <name>type</name>
            <type>javax.el.ValueExpression</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>popupPanel</tag-name>
        <component>
            <description>JSF component class</description>
            <component-type>org.richfaces.PopupPanel</component-type>
            <renderer-type>org.richfaces.PopupPanelRenderer</renderer-type>
        </component>
        <attribute>
            <name>autosized</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>controlsClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>domElementAttachment</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>followByScroll</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>header</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>headerClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>height</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>keepVisualState</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>left</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>maxHeight</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>maxWidth</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>minHeight</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>minWidth</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>modal</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>moveable</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>onbeforehide</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforeshow</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onhide</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmaskclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmaskcontextmenu</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmaskdblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmaskmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmaskmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmaskmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmaskmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmaskmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onresize</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onshow</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>overlapEmbedObjects</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>resizeable</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>shadowDepth</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>shadowOpacity</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>show</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>top</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>trimOverlayedElements</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>visualOptions</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>width</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>zindex</name>
            <type>int</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>progressBar</tag-name>
        <component>
            <description>Class provides base component class for progress bar @author "Andrey Markavtsov"</description>
            <component-type>org.richfaces.ProgressBar</component-type>
            <renderer-type>org.richfaces.ProgressBarRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>enabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>finishClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>initialClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>interval</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>label</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>maxValue</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>minValue</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>mode</name>
            <type>org.richfaces.component.SwitchType</type>
        </attribute>
        <attribute>
            <name>onbeforedomupdate</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbegin</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onfinish</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>progressClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>remainingClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>select</tag-name>
        <component>
            <description>@author abelevich</description>
            <component-type>org.richfaces.Select</component-type>
            <renderer-type>org.richfaces.SelectRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>Converter instance registered with this component.</description>
            <display-name>Converter</display-name>
            <icon />
            <name>converter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the converter message, replacing any message that comes from the converter.</description>
            <display-name>Converter Message</display-name>
            <icon />
            <name>converterMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>defaultLabel</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>enableManualInput</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that this component's value must be converted and validated immediately (that is, during Apply Request Values phase), rather than waiting until Process Validations phase.</description>
            <display-name>Immediate Action</display-name>
            <icon />
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>itemClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>listClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>listHeight</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>listWidth</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>maxListHeight</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>minListHeight</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onblur</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onfocus</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistdblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onlistmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onselectitem</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating that the user is required to provide a submitted value for this input component.</description>
            <display-name>Required Flag</display-name>
            <icon />
            <name>required</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the validation message for the "required" facility, if the "required" facility is used.</description>
            <display-name>Required Message</display-name>
            <icon />
            <name>requiredMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>selectFirst</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>selectItemClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>showButton</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>MethodExpression representing a validator method that will be called during Process Validations to perform correctness checks on the value of this component. The expression must evaluate to a public method that takes FacesContext, UIComponent, and Object parameters, with a return type of void.</description>
            <display-name>Validator</display-name>
            <icon />
            <name>validator</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>A ValueExpression enabled attribute that, if present, will be used as the text of the validator message, replacing any message that comes from the validator.</description>
            <display-name>Validator Message</display-name>
            <icon />
            <name>validatorMessage</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The current value of this component.</description>
            <display-name>Value</display-name>
            <icon />
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing a value change listener method that will be notified when a new value has been set for this input component. The expression must evaluate to a public method that takes a &lt;code&gt;ValueChangeEvent&lt;/code&gt; parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing what the new value is, but this can be useful in cases where a notification is needed that "this value changed".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Value Change Listener</display-name>
            <icon />
            <name>valueChangeListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>tab</tag-name>
        <component>
            <description>@author akolonitsky @since 2010-10-19</description>
            <component-type>org.richfaces.Tab</component-type>
            <renderer-type>org.richfaces.TabRenderer</renderer-type>
        </component>
        <attribute>
            <description>MethodExpression representing the application action to invoke when this component is activated by the user. The expression must evaluate to a public method that takes no parameters, and returns an Object (the toString() of which is called to derive the logical outcome) which is passed to the NavigationHandler for this application.</description>
            <display-name>Application Action</display-name>
            <icon />
            <name>action</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing an action listener method that will be notified when this component is activated by the user. The expression must evaluate to a public method that takes an ActionEvent parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing where the event came from, but this can be useful in cases where a notification is needed that "some action happened".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Action Listener</display-name>
            <icon />
            <name>actionListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>bypassUpdates</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>contentClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>execute</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>header</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>headerActiveClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>headerClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>headerDisabledClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>headerInactiveClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>headerStyle</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase.</description>
            <display-name>Immediate Action</display-name>
            <icon />
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>limitRender</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>name</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforedomupdate</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbegin</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onenter</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onheaderclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onheaderdblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onheadermousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onheadermousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onheadermouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onleave</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>render</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>switchType</name>
            <type>org.richfaces.component.SwitchType</type>
        </attribute>
        <attribute>
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The current value of this component.</description>
            <display-name>Value</display-name>
            <icon />
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>tabPanel</tag-name>
        <component>
            <description>@author akolonitsky @since 2010-08-24</description>
            <component-type>org.richfaces.TabPanel</component-type>
            <renderer-type>org.richfaces.TabPanelRenderer</renderer-type>
            <handler-class>org.richfaces.view.facelets.html.TogglePanelTagHandler</handler-class>
        </component>
        <attribute>
            <name>activeItem</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>Converter instance registered with this component.</description>
            <display-name>Converter</display-name>
            <icon />
            <name>converter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <name>cycledSwitching</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>headerAlignment</name>
            <type>org.richfaces.HeaderAlignment</type>
        </attribute>
        <attribute>
            <name>headerPosition</name>
            <type>org.richfaces.HeaderPosition</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>itemChangeListener</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforeitemchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>switchType</name>
            <type>org.richfaces.component.SwitchType</type>
        </attribute>
        <attribute>
            <name>tabActiveHeaderClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>tabContentClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>tabDisabledHeaderClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>tabHeaderClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>tabInactiveHeaderClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>toggleControl</tag-name>
        <behavior>
            <description>@author akolonitsky</description>
            <behavior-id>org.richfaces.component.behavior.ToggleControl</behavior-id>
            <handler-class>org.richfaces.view.facelets.html.CustomBehaviorHandler</handler-class>
        </behavior>
        <attribute>
            <name>disableDefault</name>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <name>event</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>targetItem</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>targetPanel</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>togglePanel</tag-name>
        <component>
            <description>@author akolonitsky @version 1.0</description>
            <component-type>org.richfaces.TogglePanel</component-type>
            <renderer-type>org.richfaces.TogglePanelRenderer</renderer-type>
            <handler-class>org.richfaces.view.facelets.html.TogglePanelTagHandler</handler-class>
        </component>
        <attribute>
            <name>activeItem</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>Converter instance registered with this component.</description>
            <display-name>Converter</display-name>
            <icon />
            <name>converter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <name>cycledSwitching</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>itemChangeListener</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforeitemchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>switchType</name>
            <type>org.richfaces.component.SwitchType</type>
        </attribute>
        <attribute>
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>togglePanelItem</tag-name>
        <component>
            <description>@author akolonitsky @version 1.0</description>
            <component-type>org.richfaces.TogglePanelItem</component-type>
            <renderer-type>org.richfaces.TogglePanelItemRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>Converter instance registered with this component.</description>
            <display-name>Converter</display-name>
            <icon />
            <name>converter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>name</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onenter</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onleave</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>switchType</name>
            <type>org.richfaces.component.SwitchType</type>
        </attribute>
        <attribute>
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The current value of this component.</description>
            <display-name>Value</display-name>
            <icon />
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>toolbar</tag-name>
        <component>
            <component-type>org.richfaces.Toolbar</component-type>
            <renderer-type>org.richfaces.ToolbarRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>height</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemSeparator</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemStyle</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemdblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <icon />
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <icon />
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <icon />
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>width</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>toolbarGroup</tag-name>
        <component>
            <component-type>org.richfaces.ToolbarGroup</component-type>
            <renderer-type>org.richfaces.ToolbarGroupRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemSeparator</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>itemStyle</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>location</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemdblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onitemmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>tooltip</tag-name>
        <component>
            <description>@author amarkhel @since 2010-10-24</description>
            <component-type>org.richfaces.Tooltip</component-type>
            <renderer-type>org.richfaces.TooltipRenderer</renderer-type>
        </component>
        <attribute>
            <name>attached</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>Converter instance registered with this component.</description>
            <display-name>Converter</display-name>
            <icon />
            <name>converter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>direction</name>
            <type>org.richfaces.component.Positioning</type>
        </attribute>
        <attribute>
            <name>followMouse</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>hideDelay</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>hideEvent</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>horizontalOffset</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>jointPoint</name>
            <type>org.richfaces.component.Positioning</type>
        </attribute>
        <attribute>
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>layout</name>
            <type>org.richfaces.TooltipLayout</type>
        </attribute>
        <attribute>
            <name>limitRender</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>mode</name>
            <type>org.richfaces.TooltipMode</type>
        </attribute>
        <attribute>
            <name>onbeforedomupdate</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforehide</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforeshow</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbegin</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onhide</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onshow</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>render</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>showDelay</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>showEvent</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>target</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The current value of this component.</description>
            <display-name>Value</display-name>
            <icon />
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>verticalOffset</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>zindex</name>
            <type>int</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>tree</tag-name>
        <component>
            <description>@author Nick Belaevski</description>
            <component-type>org.richfaces.Tree</component-type>
            <renderer-type>org.richfaces.TreeRenderer</renderer-type>
            <handler-class>org.richfaces.view.facelets.TreeHandler</handler-class>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <icon />
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>execute</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>handleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>iconClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>iconCollapsed</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>iconExpanded</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>iconLeaf</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>keepSaved</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>labelClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <icon />
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>limitRender</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>nodeClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>nodeType</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforedomupdate</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforenodetoggle</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforeselectionchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbegin</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <icon />
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <icon />
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <icon />
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <icon />
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <icon />
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <icon />
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <icon />
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <icon />
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <icon />
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <icon />
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onnodetoggle</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onselectionchange</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>render</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>rowKeyConverter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <name>rowKeyVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>selection</name>
            <type>java.util.Collection</type>
        </attribute>
        <attribute>
            <name>selectionType</name>
            <type>org.richfaces.component.SwitchType</type>
        </attribute>
        <attribute>
            <name>stateVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <icon />
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <icon />
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <icon />
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>toggleNodeEvent</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>toggleType</name>
            <type>org.richfaces.component.SwitchType</type>
        </attribute>
        <attribute>
            <name>treeSelectionChangeListener</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <name>treeToggleListener</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>var</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>treeModelAdaptor</tag-name>
        <component>
            <description>@author Nick Belaevski</description>
            <component-type>org.richfaces.TreeModelAdaptor</component-type>
            <handler-class>org.richfaces.view.facelets.TreeModelAdaptorHandler</handler-class>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>leaf</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>nodes</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>rowKeyConverter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>treeModelRecursiveAdaptor</tag-name>
        <component>
            <description>@author Nick Belaevski</description>
            <component-type>org.richfaces.TreeModelRecursiveAdaptor</component-type>
            <handler-class>org.richfaces.view.facelets.TreeModelRecursiveAdaptorHandler</handler-class>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>leaf</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>nodes</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>roots</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>rowKeyConverter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>treeNode</tag-name>
        <component>
            <description>@author Nick Belaevski</description>
            <component-type>org.richfaces.TreeNode</component-type>
            <renderer-type>org.richfaces.TreeNodeRenderer</renderer-type>
            <handler-class>org.richfaces.view.facelets.TreeNodeHandler</handler-class>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <icon />
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>expanded</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>handleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>iconClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>iconCollapsed</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>iconExpanded</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>iconLeaf</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>labelClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <icon />
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforetoggle</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <icon />
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <icon />
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <icon />
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <icon />
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <icon />
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <icon />
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <icon />
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <icon />
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <icon />
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <icon />
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ontoggle</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <icon />
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <icon />
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <icon />
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>toggleListener</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <name>type</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>treeSelectionChangeListener</tag-name>
        <handler-class>org.richfaces.view.facelets.TreeSelectionChangeListenerHandler</handler-class>
        <attribute>
            <name>for</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>binding</name>
            <type>javax.el.ValueExpression</type>
        </attribute>
        <attribute>
            <name>listener</name>
            <type>javax.el.ValueExpression</type>
        </attribute>
        <attribute>
            <name>type</name>
            <type>javax.el.ValueExpression</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>treeToggleListener</tag-name>
        <handler-class>org.richfaces.view.facelets.TreeToggleListenerHandler</handler-class>
        <attribute>
            <name>for</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>binding</name>
            <type>javax.el.ValueExpression</type>
        </attribute>
        <attribute>
            <name>listener</name>
            <type>javax.el.ValueExpression</type>
        </attribute>
        <attribute>
            <name>type</name>
            <type>javax.el.ValueExpression</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>validator</tag-name>
        <behavior>
            <description>&lt;p class="changed_added_4_0"&gt; &lt;/p&gt; @author asmirnov@exadel.com</description>
            <behavior-id>org.richfaces.behavior.ClientValidator</behavior-id>
            <handler-class>org.richfaces.view.facelets.html.ClientValidatorHandler</handler-class>
        </behavior>
        <attribute>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>onbeforedomupdate</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforesubmit</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbegin</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onerror</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>queueId</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <function>
        <function-name>clientId</function-name>
        <function-class>org.richfaces.function.RichFunction</function-class>
        <function-signature>java.lang.String clientId(java.lang.String)</function-signature>
    </function>
    <function>
        <function-name>component</function-name>
        <function-class>org.richfaces.function.RichFunction</function-class>
        <function-signature>java.lang.String component(java.lang.String)</function-signature>
    </function>
    <function>
        <function-name>element</function-name>
        <function-class>org.richfaces.function.RichFunction</function-class>
        <function-signature>java.lang.String element(java.lang.String)</function-signature>
    </function>
    <function>
        <function-name>findComponent</function-name>
        <function-class>org.richfaces.function.RichFunction</function-class>
        <function-signature>javax.faces.component.UIComponent findComponent(java.lang.String)</function-signature>
    </function>
    <function>
        <description>@since 3.3.1 @param rolesObject @return</description>
        <function-name>isUserInRole</function-name>
        <function-class>org.richfaces.function.RichFunction</function-class>
        <function-signature>boolean isUserInRole(java.lang.Object)</function-signature>
    </function>
    <function>
        <function-name>toScript</function-name>
        <function-class>org.richfaces.function.RichFunction</function-class>
        <function-signature>java.lang.String toScript(java.lang.Object)</function-signature>
    </function>
</facelet-taglib>

