<?xml version="1.0" encoding="UTF-8"?>
<facelet-taglib xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="2.0" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facelettaglibrary_2_0.xsd" id="a4j">
    <namespace>http://richfaces.org/a4j</namespace>
    <tag>
        <tag-name>actionListener</tag-name>
        <handler-class>org.richfaces.view.facelets.html.ActionListenerHandler</handler-class>
        <attribute>
            <name>for</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>binding</name>
            <type>javax.el.ValueExpression</type>
        </attribute>
        <attribute>
            <name>listener</name>
            <type>javax.el.ValueExpression</type>
        </attribute>
        <attribute>
            <name>type</name>
            <type>javax.el.ValueExpression</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>ajax</tag-name>
        <behavior>
            <description>@author Anton Belevich</description>
            <behavior-id>org.ajax4jsf.behavior.Ajax</behavior-id>
            <handler-class>org.richfaces.view.facelets.html.AjaxHandler</handler-class>
        </behavior>
        <attribute>
            <name>bypassUpdates</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>event</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>execute</name>
            <type>java.util.Collection</type>
        </attribute>
        <attribute>
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>limitRender</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>listener</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <name>onbeforedomupdate</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforesubmit</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbegin</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onerror</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>queueId</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>render</name>
            <type>java.util.Collection</type>
        </attribute>
        <attribute>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>attachQueue</tag-name>
        <component>
            <description>@author Nick Belaevski</description>
            <component-type>org.richfaces.AttachQueue</component-type>
            <renderer-type>org.richfaces.AttachQueueRenderer</renderer-type>
            <handler-class>org.richfaces.view.facelets.html.AttachQueueHandler</handler-class>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ignoreDupResponses</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>name</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrequestdequeue</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrequestqueue</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>requestDelay</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>requestGroupingId</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>commandButton</tag-name>
        <component>
            <description>@author Nick Belaevski</description>
            <component-type>org.richfaces.CommandButton</component-type>
            <renderer-type>org.richfaces.CommandButtonRenderer</renderer-type>
        </component>
        <attribute>
            <description>MethodExpression representing the application action to invoke when this component is activated by the user. The expression must evaluate to a public method that takes no parameters, and returns an Object (the toString() of which is called to derive the logical outcome) which is passed to the NavigationHandler for this application.</description>
            <display-name>Application Action</display-name>
            <icon />
            <name>action</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing an action listener method that will be notified when this component is activated by the user. The expression must evaluate to a public method that takes an ActionEvent parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing where the event came from, but this can be useful in cases where a notification is needed that "some action happened".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Action Listener</display-name>
            <icon />
            <name>actionListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>bypassUpdates</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit.</description>
            <display-name>Disabled Flag</display-name>
            <icon />
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>execute</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>image</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase.</description>
            <display-name>Immediate Action</display-name>
            <icon />
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>limitRender</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>onbeforedomupdate</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbegin</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <icon />
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <icon />
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <icon />
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <icon />
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <icon />
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <icon />
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <icon />
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <icon />
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <icon />
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <icon />
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>render</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <icon />
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <icon />
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <icon />
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Type of button to create. Can be one of "submit", "button", "image" and "reset". If not specified, the default value is "submit".</description>
            <display-name>Button Type</display-name>
            <icon />
            <name>type</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The current value of this component.</description>
            <display-name>Value</display-name>
            <icon />
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>commandLink</tag-name>
        <component>
            <description>@author Nick Belaevski</description>
            <component-type>org.richfaces.CommandLink</component-type>
            <renderer-type>org.richfaces.CommandLinkRenderer</renderer-type>
        </component>
        <attribute>
            <description>MethodExpression representing the application action to invoke when this component is activated by the user. The expression must evaluate to a public method that takes no parameters, and returns an Object (the toString() of which is called to derive the logical outcome) which is passed to the NavigationHandler for this application.</description>
            <display-name>Application Action</display-name>
            <icon />
            <name>action</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing an action listener method that will be notified when this component is activated by the user. The expression must evaluate to a public method that takes an ActionEvent parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing where the event came from, but this can be useful in cases where a notification is needed that "some action happened".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Action Listener</display-name>
            <icon />
            <name>actionListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>bypassUpdates</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>The character encoding of the resource designated by this hyperlink.</description>
            <display-name>Character Set</display-name>
            <icon />
            <name>charset</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The position and shape of the hot spot on the screen (for use in client-side image maps).</description>
            <display-name>Coordinates</display-name>
            <icon />
            <name>coords</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit.</description>
            <display-name>Disabled Flag</display-name>
            <icon />
            <name>disabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>execute</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>The language code of the resource designated by this hyperlink.</description>
            <display-name>Language</display-name>
            <icon />
            <name>hreflang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase.</description>
            <display-name>Immediate Action</display-name>
            <icon />
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>limitRender</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>onbeforedomupdate</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbegin</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <icon />
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <icon />
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <icon />
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <icon />
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <icon />
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <icon />
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <icon />
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <icon />
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <icon />
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <icon />
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The relationship from the current document to the anchor specified by this hyperlink. The value of this attribute is a space-separated list of link types.</description>
            <display-name>Relationship</display-name>
            <icon />
            <name>rel</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>render</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>A reverse link from the anchor specified by this hyperlink to the current document. The value of this attribute is a space-separated list of link types.</description>
            <display-name>Reverse Link</display-name>
            <icon />
            <name>rev</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The shape of the hot spot on the screen (for use in client-side image maps). Valid values are: default (entire region); rect (rectangular region); circle (circular region); and poly (polygonal region).</description>
            <display-name>Shape</display-name>
            <icon />
            <name>shape</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <icon />
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <icon />
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <icon />
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The content type of the resource designated by this hyperlink.</description>
            <display-name>Content Type</display-name>
            <icon />
            <name>type</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The current value of this component.</description>
            <display-name>Value</display-name>
            <icon />
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>jsFunction</tag-name>
        <component>
            <description>@author asmirnov@exadel.com (latest modification by $Author: alexsmirnov $) @version $Revision: 1.1.2.2 $ $Date: 2007/01/23 20:01:04 $</description>
            <component-type>org.richfaces.Function</component-type>
            <renderer-type>org.richfaces.FunctionRenderer</renderer-type>
        </component>
        <attribute>
            <description>MethodExpression representing the application action to invoke when this component is activated by the user. The expression must evaluate to a public method that takes no parameters, and returns an Object (the toString() of which is called to derive the logical outcome) which is passed to the NavigationHandler for this application.</description>
            <display-name>Application Action</display-name>
            <icon />
            <name>action</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing an action listener method that will be notified when this component is activated by the user. The expression must evaluate to a public method that takes an ActionEvent parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing where the event came from, but this can be useful in cases where a notification is needed that "some action happened".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Action Listener</display-name>
            <icon />
            <name>actionListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>bypassUpdates</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>execute</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase.</description>
            <display-name>Immediate Action</display-name>
            <icon />
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>limitRender</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>name</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforedomupdate</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbegin</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>render</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The current value of this component.</description>
            <display-name>Value</display-name>
            <icon />
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>log</tag-name>
        <component>
            <description>@author Nick Belaevski</description>
            <component-type>org.richfaces.AjaxLog</component-type>
            <renderer-type>org.richfaces.AjaxLogRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>level</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>mode</name>
            <type>org.richfaces.component.LogMode</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>mediaOutput</tag-name>
        <component>
            <description>@author shura</description>
            <component-type>org.richfaces.MediaOutput</component-type>
            <renderer-type>org.richfaces.MediaOutputRenderer</renderer-type>
            <handler-class>org.richfaces.view.facelets.html.MediaOutputHandler</handler-class>
        </component>
        <attribute>
            <name>accesskey</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>align</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>archive</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>border</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>cacheable</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>charset</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>classid</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>codebase</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>codetype</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Converter instance registered with this component.</description>
            <display-name>Converter</display-name>
            <icon />
            <name>converter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <name>coords</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>createContent</name>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <name>declare</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Get Element name for rendering ( imj , a , object, applet ). @return</description>
            <name>element</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>expires</name>
            <type>java.util.Date</type>
        </attribute>
        <attribute>
            <name>fileName</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>hreflang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>hspace</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ismap</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>lastModified</name>
            <type>java.util.Date</type>
        </attribute>
        <attribute>
            <name>mimeType</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onblur</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onfocus</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rel</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>rev</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>shape</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>standby</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>tabindex</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>target</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>type</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Get URI attribute for resource ( src for images, href for links etc ). @return</description>
            <name>uriAttribute</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>usemap</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The current value of this component.</description>
            <display-name>Value</display-name>
            <icon />
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>vspace</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>outputPanel</tag-name>
        <component>
            <description>@author asmirnov@exadel.com (latest modification by $Author: alexsmirnov $) @version $Revision: 1.1.2.1 $ $Date: 2007/01/09 18:58:26 $</description>
            <component-type>org.richfaces.OutputPanel</component-type>
            <renderer-type>org.richfaces.OutputPanelRenderer</renderer-type>
        </component>
        <attribute>
            <name>ajaxRendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>dir</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>keepTransient</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>lang</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>layout</name>
            <type>org.richfaces.component.OutputPanelLayout</type>
        </attribute>
        <attribute>
            <name>onclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondblclick</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeydown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeypress</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onkeyup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousedown</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmousemove</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseout</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseover</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onmouseup</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>style</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>styleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>title</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>param</tag-name>
        <component>
            <description>@author shura (latest modification by $Author: alexsmirnov $) @version $Revision: 1.1.2.2 $ $Date: 2007/02/01 15:31:55 $</description>
            <component-type>org.richfaces.Parameter</component-type>
            <handler-class>org.richfaces.view.facelets.html.ParameterHandler</handler-class>
        </component>
        <attribute>
            <name>assignTo</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Name of the parameter associated with this component.</description>
            <display-name>Property Name</display-name>
            <icon />
            <name>name</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>********************************************************</description>
            <name>noEscape</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Value of the parameter associated with this component.</description>
            <display-name>Property Value</display-name>
            <icon />
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>poll</tag-name>
        <component>
            <description>Component for periodically call AJAX events on server ( poll actions ) @author shura</description>
            <component-type>org.richfaces.Poll</component-type>
            <renderer-type>org.richfaces.PollRenderer</renderer-type>
            <handler-class>org.richfaces.view.facelets.html.AjaxPollHandler</handler-class>
        </component>
        <attribute>
            <description>MethodExpression representing the application action to invoke when this component is activated by the user. The expression must evaluate to a public method that takes no parameters, and returns an Object (the toString() of which is called to derive the logical outcome) which is passed to the NavigationHandler for this application.</description>
            <display-name>Application Action</display-name>
            <icon />
            <name>action</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>&lt;p&gt; MethodExpression representing an action listener method that will be notified when this component is activated by the user. The expression must evaluate to a public method that takes an ActionEvent parameter, with a return type of void, &lt;span class="changed_added_2_0"&gt;or to a public method that takes no arguments with a return type of void. In the latter case, the method has no way of easily knowing where the event came from, but this can be useful in cases where a notification is needed that "some action happened".&lt;/span&gt; &lt;/p&gt;</description>
            <display-name>Action Listener</display-name>
            <icon />
            <name>actionListener</name>
            <type>javax.faces.el.MethodBinding</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>bypassUpdates</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>data</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>enabled</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>execute</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating that, if this component is activated by the user, notifications should be delivered to interested listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke Application phase.</description>
            <display-name>Immediate Action</display-name>
            <icon />
            <name>immediate</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>interval</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>limitRender</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>onbeforedomupdate</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbegin</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ontimer</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>render</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>status</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The current value of this component.</description>
            <display-name>Value</display-name>
            <icon />
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>push</tag-name>
        <component>
            <description>@author Nick Belaevski</description>
            <component-type>org.richfaces.Push</component-type>
            <renderer-type>org.richfaces.PushRenderer</renderer-type>
        </component>
        <attribute>
            <name>address</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ondataavailable</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onerror</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>queue</tag-name>
        <component>
            <description>@author Nick Belaevski</description>
            <component-type>org.richfaces.Queue</component-type>
            <renderer-type>org.richfaces.QueueRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>ignoreDupResponses</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>name</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onbeforedomupdate</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>oncomplete</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onerror</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onevent</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrequestdequeue</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onrequestqueue</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onsubmit</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>requestDelay</name>
            <type>int</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>region</tag-name>
        <component>
            <description>@author Nick Belaevski</description>
            <component-type>org.richfaces.Region</component-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>repeat</tag-name>
        <component>
            <description>@author Nick Belaevski</description>
            <component-type>org.richfaces.Repeat</component-type>
            <renderer-type>org.richfaces.RepeatRenderer</renderer-type>
            <handler-class>org.richfaces.view.facelets.html.RepeatHandler</handler-class>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>first</name>
            <type>int</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>iterationStatusVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>keepSaved</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>rowKeyConverter</name>
            <type>javax.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <name>rowKeyVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>rows</name>
            <type>int</type>
        </attribute>
        <attribute>
            <name>stateVar</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>value</name>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <name>var</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <tag-name>status</tag-name>
        <component>
            <description>@author Nick Belaevski</description>
            <component-type>org.richfaces.Status</component-type>
            <renderer-type>org.richfaces.StatusRenderer</renderer-type>
        </component>
        <attribute>
            <description>The value binding expression used to wire up this component to a component property of a JavaBean class</description>
            <icon />
            <name>binding</name>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <name>errorStyle</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>errorStyleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>errorText</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>The component identifier for this component. This value must be unique within the closest parent component that is a naming container.</description>
            <display-name>Component Identifier</display-name>
            <icon />
            <name>id</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>name</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onerror</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onstart</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onstop</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>onsuccess</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>Flag indicating whether or not this component should be rendered (during Render Response Phase), or processed on any subsequent form submit. The default value for this property is true.</description>
            <display-name>Rendered Flag</display-name>
            <icon />
            <name>rendered</name>
            <type>boolean</type>
        </attribute>
        <attribute>
            <name>startStyle</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>startStyleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>startText</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>stopStyle</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>stopStyleClass</name>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <name>stopText</name>
            <type>java.lang.String</type>
        </attribute>
    </tag>
</facelet-taglib>

