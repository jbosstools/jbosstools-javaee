<?xml version="1.0" encoding="UTF-8"?>
<chapter id="projects">
	<?dbhtml filename="projects.html"?>
	<chapterinfo>
		<keywordset>
			<keyword>JBoss Developer Studio</keyword>
			<keyword>Eclipse</keyword>
			<keyword>JSF Tools</keyword>
			<keyword>Java</keyword>
			<keyword>JBoss</keyword>
		</keywordset>
	</chapterinfo>

	<title>Projects</title>
	<para>To take an advantage of JSF you will need to perform one of the next steps:</para>

	<itemizedlist>
		<listitem>
			<para>Create new JSF projects</para>
		</listitem>
		<listitem>
			<para>Import (open) existing JSF projects</para>
		</listitem>
		<listitem>
			<para>Add JSF capability to any existing Eclipse project</para>
		</listitem>
		<listitem>
			<para>Import and add JSF capability to any existing project created outside Eclipse.</para>
		</listitem>
	</itemizedlist>
	<para>This section will go into more detail for each step.</para>

	<section id="new_jsf_project">

		<title>Creating a New JSF Project</title>

		<para>
			It is easy to create a new project that contains all the JSF libraries, tag libraries and JSF configuration file with the aid of a special wizard. To get it, select <menuchoice><guimenuitem>File</guimenuitem><guimenuitem>New</guimenuitem><guimenuitem>Other</guimenuitem><guimenuitem>JBoos Tools Web</guimenuitem><guimenuitem>JSF</guimenuitem><guimenuitem>JSF Project</guimenuitem></menuchoice> and click the <guibutton>Next</guibutton> button.
		</para>

		<figure>
			<title>Choosing a JSF Project</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_10.png"/>
				</imageobject>
			</mediaobject>
		</figure>

		<para>
			On the next page you will be prompted to enter the <guilabel>Project Name</guilabel> and select a location for the project (or just leave a default path).
		</para>
		<para>The <guilabel>JSF Version</guilabel> option also allows you to specify the JSF implementation to use.</para>
		<figure>
			<title>Creating a New JSF Project</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_11.png"/>
				</imageobject>
			</mediaobject>
		</figure>

		<para>
			There are a number of predefined project templates that are both flexible and easily customizable. You can pick a different template on which the projects Importing Existing should be based on. Almost all templates come in two variations: with and without JSF libraries.
		</para>
		<figure>
			<title>Choosing JSF Templates</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_12.png"/>
				</imageobject>
			</mediaobject>
		</figure>

		<para>The table below provides description for each possible JSF template.</para>
		<table>
			<title>JSF Project Templates</title>
			<tgroup cols="2">
				<colspec colnum="1" align="left" colwidth="1*"/>
				<colspec colnum="2" colwidth="3*"/>


				<thead>
					<row>
						<entry align="center">
							<para>Template</para>
						</entry>

						<entry align="center">
							<para>Description</para>
						</entry>
					</row>
				</thead>

				<tbody>

					<row>
						<entry>
							<para>
								<emphasis>
									<property>JSFBlankWithoutLibs</property>
								</emphasis>
							</para>
						</entry>

						<entry>
							<para>
								This template will create a standard Web project structure with all the JSF capabilities.
							</para>
							<para>
								Use a template without libs to avoid library conflicts when your server already has JSF libraries installed.
							</para>
						</entry>
					</row>

				<!--	<row>
						<entry>
							<para>
								<emphasis>
									<property>JSFKickStartWithLibs</property>
								</emphasis>
							</para>
						</entry>

						<entry>
							<para>This template will create a standard Web project structure, and also include a sample application that is ready to run</para>
						</entry>
					</row> -->

					<row>
						<entry>
							<para>
								<emphasis>
									<property>JSFKickStartWithoutLibs</property>
								</emphasis>
							</para>
						</entry>

						<entry>
							<para>
								This template will create a standard Web project structure, and also include a sample application that is ready to run.
							</para>
						<!--	<para>
								Some servers already provide JSF libs, and you risk library conflicts while deploying your project. To avoid such conflicts, use a template without libs if you have a server with its own JSF libraries.
							</para> -->
							<para>
								Use a template without libs to avoid library conflicts when your server already has JSF libraries installed.
							</para>
						</entry>
					</row>

				</tbody>
			</tgroup>
		</table>


                <!--                  <para>You can of course create your own custom templates. More information
                                on templates creation could be found in <link
                                        linkend="CreatingCustomJSPTemplates">Chapter 5</link>.</para>
     -->

		<para>
			On the next page you need to select which <guilabel>Servlet version</guilabel> to use, and specify whether or not to register this application with JBoss AS (or other server) in order to run and test your application.
		</para>

		<para>The <guilabel>Context Path</guilabel> option defines the name under which the application will be deployed.</para>

		<para>
			The <guilabel>Runtime</guilabel> value tells Eclipse where to find the Web libraries necessary to build (compile) the project. It is not possible to finish the project creation without selecting a Runtime. If you do not have any values, click the <guibutton>New...</guibutton> button to add new Runtime.
		</para>

		<para>
			The <guilabel>Target Server</guilabel> option allows you specifying whether or not to deploy the application. The Target Server corresponds to the Runtime value selected above. If you do not want to deploy the application, uncheck this option.
		</para>
		<figure>
			<title>Registering the Project on Server</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_14.png"/>
				</imageobject>
			</mediaobject>
		</figure>

		<para>When you are all done, you should see that the project has appeared in the Package Explorer view:</para>
		<figure>
			<title>A New Project in the Package Explorer</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_15.png"/>
				</imageobject>
			</mediaobject>
		</figure>

		<para>
			At this point you can open the <filename>faces-config.xml</filename> file and start working on your application. There are a lot of features available when developing JSF applications. These features will be discussed in more detail later in this document.</para>
	</section>

	<section id="ImportingExsJSFProjWithAnyStr74447">

		<title>Importing Existing JSF Projects with Any Structure</title>

		<para>For detailed information on migration of JSF projects into a workspace see the Migration Guide.</para>

	</section>
	<section id="add_jsf_capability">

		<title>Adding JSF Capability to Any Existing Project</title>

		<para>
			It is also possible to add <productname>JSF</productname> capabilities (JSF libraries, tag libraries) to any existing project in your workspace. After that you will be able to make use of features such as the JSF configuration editor, JBoss Tools JSP editor and any others. No pre-existing <filename>web.xml</filename> file is necessary.
		</para>
		<para>
		Right-click on the project in the <guilabel>Project Explorer</guilabel>, bringing up the context menu. From this menu navigate to <menuchoice>
                <guimenuitem>Configure</guimenuitem>
                <guimenuitem>Add JSF Capabilities</guimenuitem>
            </menuchoice>.
		</para>
		<figure>
			<title>Add JSF Capabilities menu item</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_existing_project_01.png"/>
				</imageobject>
			</mediaobject>
		</figure>
		<para>
			This will open the <guilabel>Project Facets</guilabel> dialog for the project. Click the checkbox next to <guilabel>JavaServer Faces</guilabel>. You undertake further configuration by clicking the <guilabel>Further configuration available</guilabel> button at the bottom of the dialog; this will allow you to define specific configuration options. Click <guibutton>Apply</guibutton> and then the <guibutton>OK</guibutton> on the <guilabel>Project Facets</guilabel> dialog when you are finished.  
		</para>
		<figure>
			<title>Project Facets dialog</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_existing_project_02.png"/>
				</imageobject>
			</mediaobject>
		</figure>
		<para>
			The project will now contain a new node (visible through the <guilabel>Project Explorer</guilabel>) named <guilabel>Web Resources</guilabel>.You will also notice new files within the <guilabel>WebContent</guilabel> folder.
		</para>
	<!--	<para>The wizard will first ask you to define location of the <filename>web.xml</filename> file and the project name.</para>
		<figure>
			<title>Project Location</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_17.png"/>
				</imageobject>
			</mediaobject>
		</figure>
		<para>On the last page you can specify the different folders for your project as well as register this application with a servlet container.</para>

		<para>Make sure to select the <guilabel>Add Libraries</guilabel> option to add all required JSF related libraries into your project.</para>

		<para>The <guilabel>Context Path</guilabel> option defines the name under which the application will be deployed.</para>

		<para>
			The <guilabel>Runtime</guilabel> value tells Eclipse where to find Web libraries necessary to build (compile) the project. It is not possible to finish project import without selecting the Runtime. If you don not have any values, click the <guibutton>New...</guibutton> button to add a new Runtime.
		</para>

		<para>
			The <guilabel>Target Server</guilabel> option allows you to specify whether or not to deploy the application. The Target Server corresponds to the Runtime value selected above. If you do not want to deploy the application, uncheck this value.
		</para>
		<figure>
			<title>Project Folders</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_18.png"/>
				</imageobject>
			</mediaobject>
		</figure>
		<para>
			Once your project is imported you can see that JSF related libraries <filename>jsf-api.jar</filename> and <filename>jsf-impl.jar</filename> have been added to your project.
		</para>        -->                                            
		<note>
			<title>Note:</title>
			<para>
				Some application servers provide their own JSF implementation libraries. To avoid conflicts you should not add JSF libraries while adding JSF capabilities.
			</para>
		</note>
	<!--	<para>You are now ready to work with JSF by creating a new JSF configuration file:</para>

		<figure>
			<title>Creating a New JSF Configuration File</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_19.png"/>
				</imageobject>
			</mediaobject>
		</figure> -->

   <para>You can now open the new <filename>faces-config.xml</filename> file, that is found under your projects <menuchoice><guimenuitem>WebContent</guimenuitem><guimenuitem>WEB-INF</guimenuitem></menuchoice> folder. This file can be opened in a unique editor (see <xref linkend="jsf_config_file"/>).</para>
	</section>
	<section id="AddingYourOwnProjectTemplates853">

		<title>Adding Your Own Project Templates</title>
		<para>
			A template is a set of files that is provided as a basis when creating a new project. Project templates provide content and structure for a project.
		</para>
		<para>
			JSF Tools provides powerful template capabilities which allow you to create new templates and import existing JSF projects. This templating facility has a variety of aspects to consider. Let&apos;s start with the most straightforward case and consider the process of creating a template from your existing JSF project.
		</para>

		<para>
			Let&apos;s say you have a project that you want to use as the basis for a new <property>template</property>. The following steps will show you how to achieve this:
		</para>
		<itemizedlist>
			<listitem>
				<para>
					In the Web Projects view, right-click the project and select <menuchoice><guimenuitem>JBoss Tools JS</guimenuitem><guimenuitem>Save As Template</guimenuitem></menuchoice>
				</para>
			</listitem>
		</itemizedlist>
		<figure>
			<title>Saving Your Project as Template</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_20.png"/>
				</imageobject>
			</mediaobject>
		</figure>
		<itemizedlist>
			<listitem>
				<para>
					In the first dialog box, you can specify a name for the template (it will default to the project name) and confirm what run-time implementation of the project technology will be used.
				</para>
			</listitem>

		</itemizedlist>
		<figure>
			<title>Define Template Properties</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_20_1.png" />
				</imageobject>
			</mediaobject>
		</figure>


		<itemizedlist>
			<listitem>
				<para>
					When you click the <guibutton>Next</guibutton> button a dialog box will be presented with your project structure displayed, along with a number of check boxes. Here you can select only those parts and files in your project directory that should be part of the template.
				</para>
			</listitem>
		</itemizedlist>
		<figure>
			<title>Define Template Properties</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/jsf_support/jsf_support_20_2.png" />
				</imageobject>
			</mediaobject>
		</figure>
		<itemizedlist>
			<listitem>
				<para>
					At this point, unless you want to designate some extra files as having Velocity template coding inside them, you should click the <guibutton>Finish</guibutton> button.
				</para>
			</listitem>
		</itemizedlist>
		<para>
			That&apos;s it. This template can be used with any new or imported project that uses the same run-time implementation as the project you turned into a template.
		</para>
		<para>At this point you have a fully configured project. Now you can add some additional logic to it starting with the JSF configuration file.</para>
	</section>
	<section>
		<title>Relevant Resources Links</title>

		<para>
			You can find a more in-depth explanation on how to work with the special wizards, editors and views that can be used while developing JSF applications in our Visual Web Tools Guide.
		</para>
	</section>
</chapter>
