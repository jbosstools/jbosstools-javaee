STEREOTYPE_DECLARES_NON_EMPTY_NAME=Stereotype declares a non-empty @Named annotation [JSR-299 §2.7.1.3]
RESOURCE_PRODUCER_FIELD_SETS_EL_NAME=Producer field declaration of Java EE resource must not specify an EL name [JSR-299 §3.5.1]
PARAM_INJECTION_DECLARES_EMPTY_NAME=Injection point other than injected field must not declare a @Named annotation that does not specify the value member [JSR-299 §3.11]
INTERCEPTOR_HAS_NAME=Interceptor should not have a name [JSR-299 §2.5.3]
DECORATOR_HAS_NAME=Decorator should not have a name [JSR-299 §2.5.3]
DUPLCICATE_EL_NAME=Multiple beans ({0}) have the same EL name and the name is not resolvable [JSR-299 §5.3.1]
UNRESOLVABLE_EL_NAME=The EL name "{0}" is of the form x.y, where y ("{1}") is a valid bean EL name, and x ("{2}") is the EL name of the other bean {3} [JSR-299 §5.3.1]

UNSATISFIED_INJECTION_POINTS=No bean is eligible for injection to the injection point [JSR-299 §5.2.1]
AMBIGUOUS_INJECTION_POINTS=Multiple beans are eligible for injection to the injection point [JSR-299 §5.2.1]
UNPROXYABLE_BEAN_ARRAY_TYPE=Injection point declares an array type {0} that cannot be proxied by the container resolves to a bean {1} with a normal scope [JSR-299 §5.4.1]
UNPROXYABLE_BEAN_PRIMITIVE_TYPE=Injection point declares a primitive type {0} that cannot be proxied by the container resolves to a bean {1} with a normal scope [JSR-299 §5.4.1]
UNPROXYABLE_BEAN_TYPE_WITH_NPC=Injection point whose declared type ({0} is a class with a non-private constructor with no parameters) cannot be proxied by the container resolves to a bean {1} with a normal scope [JSR-299 §5.4.1]
UNPROXYABLE_BEAN_FINAL_TYPE=Injection point whose declared type ({0} is a final class) cannot be proxied by the container resolves to a bean {1} with a normal scope [JSR-299 §5.4.1]
UNPROXYABLE_BEAN_TYPE_WITH_FM=Injection point whose declared type ({0} is a class with final methods) cannot be proxied by the container resolves to a bean {1} with a normal scope [JSR-299 §5.4.1]

UNPROXYABLE_BEAN_ARRAY_TYPE_2=Array type {0} is not a legal type of normal scoped bean {1} because it cannot be proxied by the container [JSR-299 §5.4.1]
UNPROXYABLE_BEAN_PRIMITIVE_TYPE_2=Primitive type {0} is not a legal type of normal scoped bean {1} because it cannot be proxied by the container [JSR-299 §5.4.1]
UNPROXYABLE_BEAN_TYPE_WITH_NPC_2=Type {0} (with a non-private constructor with no parameters) is not a legal type of normal scoped bean {1} because it cannot be proxied by the container [JSR-299 §5.4.1]
UNPROXYABLE_BEAN_FINAL_TYPE_2=Type {0} (final class) is not a legal type of normal scoped bean {1} because it cannot be proxied by the container [JSR-299 §5.4.1]
UNPROXYABLE_BEAN_TYPE_WITH_FM_2=Type {0} (with final methods) is not a legal type of normal scoped bean {1} because it cannot be proxied by the container [JSR-299 §5.4.1]

DECORATOR_RESOLVES_TO_FINAL_CLASS=Decorator must not be bound to a managed bean implemented by a class {0} which is declared final [JSR-299 §8.3]
DECORATOR_RESOLVES_TO_FINAL_METHOD=Decorator matches a managed bean {0} with a non-static, non-private, final method {1}, and the decorator also implements that method  [JSR-299 §8.3]

ILLEGAL_TYPE_IN_TYPED_DECLARATION=Bean specifies a type restriction which does not correspond to a type in the unrestricted set of bean types of a bean [JSR-299 §2.2.2]
PRODUCER_METHOD_RETURN_TYPE_HAS_WILDCARD=Producer method return type must not contain a wildcard type parameter [JSR-299 §3.3]
PRODUCER_METHOD_RETURN_TYPE_IS_VARIABLE=Producer method return type cannot be a type variable [JSR-299 §3.3]
PRODUCER_FIELD_TYPE_HAS_WILDCARD=Producer field type must not contain a wildcard type parameter [JSR-299 §3.4]
PRODUCER_FIELD_TYPE_IS_VARIABLE=Producer field type cannot be a type variable [JSR-299 §3.4]
PRODUCER_FIELD_TYPE_DOES_NOT_MATCH_JAVA_EE_OBJECT=Matching object in the Java EE component environment is not of the same type as the producer field declaration [JSR-299 §3.5.1]
INJECTION_TYPE_IS_VARIABLE=Injection point type cannot be a type variable [JSR-299 §5.2.2]
INJECT_RESOLVES_TO_NULLABLE_BEAN=Injection point of primitive type resolves to the bean that may have a null value [JSR-299 §5.2.4]
STEREOTYPE_IS_ANNOTATED_TYPED=A stereotype should not be annotated @Typed [JSR-299 §2.7.1.3]
MISSING_NONBINDING_FOR_ANNOTATION_VALUE_IN_QUALIFIER_TYPE_MEMBER=Annotation-valued member of a qualifier type should be annotated @Nonbinding [JSR-299 §5.2.5]
MISSING_NONBINDING_FOR_ARRAY_VALUE_IN_QUALIFIER_TYPE_MEMBER=Array-valued member of a qualifier type should be annotated @Nonbinding [JSR-299 §5.2.5]
MISSING_NONBINDING_FOR_ANNOTATION_VALUE_IN_INTERCEPTOR_BINDING_TYPE_MEMBER=Annotation-valued member of an interceptor binding type should be annotated @Nonbinding [JSR-299 §9.5.2]
MISSING_NONBINDING_FOR_ARRAY_VALUE_IN_INTERCEPTOR_BINDING_TYPE_MEMBER=Array-valued member of an interceptor binding type must be annotated @Nonbinding [JSR-299 §9.5.2]
MISSING_TARGET_ANNOTATION_IN_QUALIFIER_TYPE=Qualifier annotation type must be annotated with @Target('{'TYPE, METHOD, FIELD, PARAMETER'}') or @Target('{'FIELD, PARAMETER'}') [JSR-299 §2.3.2, §10.1]
MISSING_RETENTION_ANNOTATION_IN_QUALIFIER_TYPE=Qualifier annotation type must be annotated with @Retention(RUNTIME) [JSR-299 §2.3.2]
MISSING_TARGET_ANNOTATION_IN_STEREOTYPE_TYPE=Stereotype annotation type must be annotated with one of @Target('{'TYPE, METHOD, FIELD'}'), @Target('{'METHOD, FIELD'}'), @Target('{'TYPE'}'),  @Target('{'METHOD'}'),  @Target('{'FIELD'}') [JSR-299 §2.7.1]
MISSING_RETENTION_ANNOTATION_IN_STEREOTYPE_TYPE=Stereotype annotation type must be annotated with @Retention(RUNTIME) [JSR-299 §2.7.1]
MISSING_TARGET_ANNOTATION_IN_SCOPE_TYPE=Scope annotation type must be annotated with @Target('{'TYPE, METHOD, FIELD'}') [JSR-299 §2.4.2]
MISSING_RETENTION_ANNOTATION_IN_SCOPE_TYPE=Scope annotation type must be annotated with @Retention(RUNTIME) [JSR-299 §2.4.2]
ILLEGAL_TARGET_IN_STEREOTYPE_TYPE_TMF=Stereotype {0} is defined as @Target(TYPE) and may not be applied to stereotype {1} which is defined as @Target('{TYPE, METHOD, FIELD}') [JSR-299 §2.7.1.5]
ILLEGAL_TARGET_IN_STEREOTYPE_TYPE_M=Stereotype {0} is defined as @Target(TYPE) and may not be applied to stereotype {1} which is defined as @Target(METHOD) [JSR-299 §2.7.1.5]
ILLEGAL_TARGET_IN_STEREOTYPE_TYPE_F=Stereotype {0} is defined as @Target(TYPE) and may not be applied to stereotype {1} which is defined as @Target(FIELD) [JSR-299 §2.7.1.5]
ILLEGAL_TARGET_IN_STEREOTYPE_TYPE_MF=Stereotype {0} is defined as @Target(TYPE) and may not be applied to stereotype {1} which is defined as @Target('{METHOD, FIELD}') [JSR-299 §2.7.1.5]
ILLEGAL_TARGET_IN_INTERCEPTOR_BINDING_TYPE=Interceptor binding type {0} is defined as @Target(TYPE) and may not be applied to interceptor binding type {1} which is defined as @Target('{TYPE, METHOD}') [JSR-299 §9.1.1]
ILLEGAL_TARGET_IN_INTERCEPTOR_BINDING_TYPE_FOR_STEREOTYPE=Stereotype {0} must be defined as @Target(TYPE) since it declares interceptor bindings ({1}) [JSR-299 §9.1.2]
NOT_PASSIVATION_CAPABLE_BEAN=Managed bean {0} which declares a passivating scope {1} must be passivation capable [JSR-299 §6.6.4]

MULTIPLE_SCOPE_TYPE_ANNOTATIONS=Bean class or producer method or field specifies multiple scope type annotations [JSR-299 §2.4.3]
MULTIPLE_SCOPE_TYPE_ANNOTATIONS_IN_BEAN_CLASS=Bean class specifies multiple scope type annotations [JSR-299 §2.4.3]
MULTIPLE_SCOPE_TYPE_ANNOTATIONS_IN_PRODUCER_METHOD=Producer method specifies multiple scope type annotations [JSR-299 §2.4.3]
MULTIPLE_SCOPE_TYPE_ANNOTATIONS_IN_PRODUCER_FIELD=Producer field specifies multiple scope type annotations [JSR-299 §2.4.3]
MISSING_SCOPE_WHEN_THERE_IS_NO_DEFAULT_SCOPE=Bean does not explicitly declare a scope when there is no default scope [JSR-299 §2.4.4]
STEREOTYPE_DECLARES_MORE_THAN_ONE_SCOPE=Stereotype declares more than one scope [JSR-299 §2.7.1.1]
ILLEGAL_SCOPE_FOR_MANAGED_BEAN_WITH_PUBLIC_FIELD=Managed bean with a public field must be @Dependent scoped [JSR-299 §3.1]
ILLEGAL_SCOPE_FOR_MANAGED_BEAN_WITH_GENERIC_TYPE=Managed bean with a parameterized bean class must be @Dependent scoped [JSR-299 §3.1]
ILLEGAL_SCOPE_FOR_SESSION_BEAN_WITH_GENERIC_TYPE=Session bean with a parameterized bean class must be @Dependent scoped [JSR-299 §3.2]
ILLEGAL_SCOPE_FOR_STATELESS_SESSION_BEAN=Session bean specifies an illegal scope. A stateless session bean must belong to the @Dependent pseudo-scope [JSR-299 §3.2]
ILLEGAL_SCOPE_FOR_SINGLETON_SESSION_BEAN=Session bean specifies an illegal scope. A singleton bean must belong to either the @ApplicationScoped scope or to the @Dependent pseudo-scope [JSR-299 §3.2]
ILLEGAL_SCOPE_FOR_PRODUCER_METHOD=Producer method with a parameterized return type with a type variable must be @Dependent scoped [JSR-299 §3.3]
ILLEGAL_SCOPE_FOR_PRODUCER_FIELD=Producer field with a parameterized type with a type variable declares must be @Dependent scoped [JSR-299 §3.4]
ILLEGAL_SCOPE_WHEN_TYPE_INJECTIONPOINT_IS_INJECTED=Bean that declares any scope other than @Dependent has an injection point of type InjectionPoint and qualifier @Default [JSR-299 §5.5.7]
ILLEGAL_SCOPE_FOR_INTERCEPTOR=Interceptor should not have any scope other than @Dependent [JSR-299 §2.4.1]
ILLEGAL_SCOPE_FOR_DECORATOR=Decorator should not have any scope other than @Dependent [JSR-299 §2.4.1]

PRODUCER_ANNOTATED_INJECT=Producer method or field cannot be annotated @Inject [JSR-299 §3.3.2, §3.4.2]
PRODUCER_PARAMETER_ILLEGALLY_ANNOTATED_DISPOSES=Producer method has a parameter annotated @Disposes [JSR-299 §3.3.2]
PRODUCER_PARAMETER_ILLEGALLY_ANNOTATED_OBSERVES=Producer method has a parameter annotated @Observes [JSR-299 §3.3.2]
OBSERVER_ANNOTATED_INJECT=Observer method cannot be annotated @Inject [JSR-299 §10.4.2]
OBSERVER_PARAMETER_ILLEGALLY_ANNOTATED=Observer method has a parameter annotated @Disposes [JSR-299 §10.4.2]
ILLEGAL_PRODUCER_METHOD_IN_SESSION_BEAN=Non-static method {0}() of a session bean class {1} is annotated @Produces, and the method is not a business method of the session bean [JSR-299 §3.3.2]
MULTIPLE_DISPOSING_PARAMETERS=Method has more than one parameter annotated @Disposes [JSR-299 §3.3.6]
DISPOSER_ANNOTATED_INJECT=Disposer method cannot be annotated @Inject [JSR-299 §3.3.6]
ILLEGAL_DISPOSER_IN_SESSION_BEAN=Non-static method {0}() of a session bean class {1} has a parameter annotated @Disposes, and the method is not a business method of the session bean [JSR-299 §3.3.6]
NO_PRODUCER_MATCHING_DISPOSER=There is no producer method declared by the (same) bean class that is assignable to the disposed parameter of a disposer method [JSR-299 §3.3.7]
MULTIPLE_DISPOSERS_FOR_PRODUCER=There are multiple disposer methods for a single producer method [JSR-299 §3.3.7]
ILLEGAL_PRODUCER_FIELD_IN_SESSION_BEAN=Non-static field of a session bean class is annotated @Produces [JSR-299 §3.4.2]
MULTIPLE_INJECTION_CONSTRUCTORS=Bean class has more than one constructor annotated @Inject [JSR-299 §3.7.1]
CONSTRUCTOR_PARAMETER_ANNOTATED_DISPOSES=Bean constructor cannot have a parameter annotated @Disposes [JSR-299 §3.7.1]
CONSTRUCTOR_PARAMETER_ANNOTATED_OBSERVES=Bean constructor cannot have a parameter annotated @Observes [JSR-299 §3.7.1]
GENERIC_METHOD_ANNOTATED_INJECT=Generic method of a bean cannot be annotated @Inject [JSR-299 §3.9.1]
STATIC_METHOD_ANNOTATED_INJECT=Static method of a bean cannot be annotated @Inject [JSR-299 §3.9.1]
MULTIPLE_OBSERVING_PARAMETERS=Method has more than one parameter annotated @Observes [JSR-299 §10.4.2]
ILLEGAL_OBSERVER_IN_SESSION_BEAN=Non-static method {0}() of a session bean class {1} has a parameter annotated @Observes, and the method is not a business method of the EJB [JSR-299 §10.4.2]
ILLEGAL_CONDITIONAL_OBSERVER=Beans with scope @Dependent may not have conditional observer methods [JSR-299 §10.4.3]

BOTH_INTERCEPTOR_AND_DECORATOR=The bean class of a managed bean cannot be annotated with both the @Interceptor and @Decorator stereotypes [JSR-299 §3.1]
SESSION_BEAN_ANNOTATED_INTERCEPTOR=Bean class of a session bean cannot be annotated @Interceptor [JSR-299 §3.2]
SESSION_BEAN_ANNOTATED_DECORATOR=Bean class of a session bean cannot be annotated @Decorator [JSR-299 §3.2]
PRODUCER_IN_INTERCEPTOR=Producer cannot be declared in an interceptor [JSR-299 §3.3.2]
PRODUCER_IN_DECORATOR=Producer cannot be declared in a decorator [JSR-299 §3.3.2]
DISPOSER_IN_INTERCEPTOR=Interceptor has a method annotated @Disposes [JSR-299 §3.3.6]
DISPOSER_IN_DECORATOR=Decorator has a method annotated @Disposes [JSR-299 §3.3.6]
MULTIPLE_DELEGATE=Decorator cannot have more than one delegate injection point [JSR-299 §8.1.2]
MISSING_DELEGATE=Decorator must have a delegate injection point [JSR-299 §8.1.2]
ILLEGAL_INJECTION_POINT_DELEGATE=Injection point that is a producer method parameter cannot be annotated @Delegate [JSR-299 §8.1.2]
ILLEGAL_BEAN_DECLARING_DELEGATE=Bean class that is not a decorator cannot have an injection point annotated @Delegate [JSR-299 §8.1.2]
DELEGATE_HAS_ILLEGAL_TYPE=The delegate type must implement or extend the decorated type {0} [JSR-299 §8.1.3]
ILLEGAL_LIFECYCLE_CALLBACK_INTERCEPTOR_BINDING=Interceptor for lifecycle callbacks may only declare interceptor binding types that are defined as @Target(TYPE) [JSR-299 §9.2] 
ILLEGAL_INTERCEPTOR_BINDING_CLASS=The bean class of a managed bean that declares an interceptor binding must not be declared final [JSR-299 §9.3]
ILLEGAL_INTERCEPTOR_BINDING_METHOD=A non-static, non-private method of a bean class of a managed bean that declares an interceptor binding must not be declared final [JSR-299 §9.3]
CONFLICTING_INTERCEPTOR_BINDINGS=The set of interceptor bindings of a bean or interceptor, including bindings inherited from stereotypes and other interceptor bindings, has two instances of a certain interceptor binding type and the instances have different values of some annotation member [JSR-299 §9.5.2]
OBSERVER_IN_DECORATOR=Decorator cannot have a method with a parameter annotated @Observes [JSR-299 §10.4.2]
OBSERVER_IN_INTERCEPTOR=Interceptor cannot have a method with a parameter annotated @Observes [JSR-299 §10.4.2]
INTERCEPTOR_IS_ALTERNATIVE=Interceptor should not be an alternative [JSR-299 §2.6.1]
DECORATOR_IS_ALTERNATIVE=Decorator should not be an alternative [JSR-299 §2.6.1]
MISSING_INTERCEPTOR_BINDING=Interceptor declared using @Interceptor should specify at least one interceptor binding [JSR-299 §9.2]

ILLEGAL_SPECIALIZING_MANAGED_BEAN=Managed bean class annotated @Specializes must directly extend the bean class of another managed bean [JSR-299 §3.1.4]
ILLEGAL_SPECIALIZING_SESSION_BEAN=Session bean class annotated @Specializes must directly extend the bean class of another session bean [JSR-299 §3.2.4]
ILLEGAL_SPECIALIZING_PRODUCER_STATIC=Producer method annotated @Specializes cannot be static [JSR-299 §3.3.3]
ILLEGAL_SPECIALIZING_PRODUCER_OVERRIDE=Producer method annotated @Specializes must directly override another producer method [JSR-299 §3.3.3]
MISSING_TYPE_IN_SPECIALIZING_BEAN=Bean {0} specializes {1} but does not have bean type(s): {2} of bean {1} [JSR-299 §4.3.1]
CONFLICTING_NAME_IN_SPECIALIZING_BEAN=Bean {0} specializes {1} and {1} has a name and {0} declares a name explicitly, using @Named [JSR-299 §4.3.1]
INTERCEPTOR_ANNOTATED_SPECIALIZES=Interceptor should not be annotated @Specializes [JSR-299 §4.3.1]
DECORATOR_ANNOTATED_SPECIALIZES=Decorator should not be annotated @Specializes [JSR-299 §4.3.1]
INCONSISTENT_SPECIALIZATION=Multiple enabled beans ({0}) specialize the same bean {1} [JSR-299 §5.1.3]

ILLEGAL_INJECTING_USERTRANSACTION_TYPE=Java EE component class has an injection point of type UserTransaction and qualifier @Default, and may not validly make use of the JTA UserTransaction according to the Java EE platform specification [JSR-299 §3.6]
ILLEGAL_INJECTING_INJECTIONPOINT_TYPE=Java EE component class supporting injection that is not a bean has an injection point of type InjectionPoint and qualifier @Default [JSR-299 §5.5.7]
ILLEGAL_QUALIFIER_IN_STEREOTYPE=A stereotype should not declare any qualifier annotation other than @Named [JSR-299 §2.7.1.3]

#Beans.xml

MISSING_BEANS_XML=Missing beans.xml file in the project {0}. This file is required for bean archives [JSR-299 §12.1]
EMPTY_ALTERNATIVE_BEAN_CLASS_NAME=<class> element must specify the name of an alternative bean class [JSR-299 §5.1.1]
UNKNOWN_ALTERNATIVE_BEAN_CLASS_NAME=There is no class "{0}" [JSR-299 §5.1.1]
ILLEGAL_ALTERNATIVE_BEAN_CLASS="{0}" is not an alternative bean class [JSR-299 §5.1.1]
EMPTY_ALTERNATIVE_ANNOTATION_NAME=<stereotype> element must specify the name of an @Alternative stereotype annotation [JSR-299 §5.1.1]
UNKNOWN_ALTERNATIVE_ANNOTATION_NAME=There is no annotation "{0}" [JSR-299 §5.1.1]
ILLEGAL_ALTERNATIVE_ANNOTATION= "{0}" is not @Alternative stereotype annotation [JSR-299 §5.1.1]
DUPLICATE_ALTERNATIVE_TYPE=The same type cannot be listed more than once under the <alternatives> element [JSR-299 §5.1.1]
EMPTY_DECORATOR_BEAN_CLASS_NAME=<class> element must specify the name of a decorator bean class [JSR-299 §8.2]
UNKNOWN_DECORATOR_BEAN_CLASS_NAME=There is no class "{0}" [JSR-299 §8.2]
ILLEGAL_DECORATOR_BEAN_CLASS="{0}" is not a decorator bean class [JSR-299 §8.2]
DUPLICATE_DECORATOR_CLASS=The same class cannot be listed more then once under the <decorators> element [JSR-299 §8.2]
EMPTY_INTERCEPTOR_CLASS_NAME=<class> element must specify the name of an interceptor class [JSR-299 §9.4]
UNKNOWN_INTERCEPTOR_CLASS_NAME=There is no class "{0}" [JSR-299 §9.4]
ILLEGAL_INTERCEPTOR_CLASS="{0}" is not an interceptor class [JSR-299 §9.4]
DUPLICATE_INTERCEPTOR_CLASS=The same class cannot be listed more then once under the <interceptors> element [JSR-299 §9.4]

#Messages for Progress Monitor
SEARCHING_RESOURCES=project "{0}"; searching resources for validation (CDI Validator).
VALIDATING_RESOURCE=project "{0}"; resource "{1}" (CDI Validator)
VALIDATING_PROJECT=project "{0}" (CDI Validator)
VALIDATING_BEANS_XML=project "{0}"; validating beans.xml (CDI beans.xml Validator).